<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Shtetl-Optimized</title>
	<atom:link href="http://www.scottaaronson.com/blog/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>http://www.scottaaronson.com/blog</link>
	<description>The Blog of Scott Aaronson</description>
	<lastBuildDate>Thu, 13 Oct 2016 14:42:25 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Avi Wigderson&#8217;s &#8220;Permanent&#8221; Impact on Me</title>
		<link>http://www.scottaaronson.com/blog/?p=2925</link>
		<comments>http://www.scottaaronson.com/blog/?p=2925#comments</comments>
		<pubDate>Wed, 12 Oct 2016 20:38:16 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Adventures in Meatspace]]></category>
		<category><![CDATA[Complexity]]></category>
		<category><![CDATA[Quantum]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2925</guid>
		<description><![CDATA[The following is the lightly-edited transcript of a talk that I gave a week ago, on Wednesday October 5, at Avi Wigderson&#8217;s 60th birthday conference at the Institute for Advanced Study in Princeton.  Videos of all the talks (including mine) are now available here. Thanks so much to Sanjeev Arora, Boaz Barak, Ran Raz, Peter [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><i>The following is the lightly-edited transcript of a talk that I gave a week ago, on Wednesday October 5, at <a href="https://www.math.ias.edu/avi60">Avi Wigderson&#8217;s 60th birthday conference</a> at the Institute for Advanced Study in Princeton.  Videos of all the talks (including mine) are <a href="https://video.ias.edu/sm"><strong>now available here</strong></a>.</i></p>
<p><i>Thanks so much to Sanjeev Arora, Boaz Barak, Ran Raz, Peter Sarnak, and Amir Shpilka for organizing the conference and for inviting me to speak; to all the other participants and speakers for a great conference; and of course to Avi himself for being Avi. &#8211;SA</i></p>
<hr />
<p>I apologize that I wasn&#8217;t able to prepare slides for today&#8217;s talk. But the good news is that, ever since I moved to Texas two months ago, I now carry concealed chalk everywhere I go. [Pull chalk out of pocket]</p>
<p>My history with Avi goes back literally half my life. I spent a semester with him at Hebrew University, and then a year with him as a postdoc here at IAS. Avi has played a bigger role in my career than just about anyone&#8212;he helped me professionally, he helped me intellectually, and once I dated and then married an Israeli theoretical computer scientist (who was also a postdoc in Avi&#8217;s group), Avi even helped me learn Hebrew. Just today, Avi taught me the Hebrew word for the permanent of a matrix. It turns out that it&#8217;s [throaty noises] <i>pehhrmahnent</i>.</p>
<p>But it all started with a talk that Avi gave in Princeton in 2000, which I attended as a prospective graduate student. That talk was about the following function of an n×n matrix A∈R<sup>n×n</sup>, the <a href="https://en.wikipedia.org/wiki/Permanent"><em>permanent</em></a>:</p>
<p>$$ \text{Per}(A) = \sum_{\sigma \in S_n} \prod_{i=1}^n a_{i,\sigma(i)}. $$</p>
<p>Avi contrasted that function with a superficially similar function, the <em>determinant</em>:</p>
<p>$$ \text{Det}(A) = \sum_{\sigma \in S_n} (-1)^{\text{sgn}(\sigma)} \prod_{i=1}^n a_{i,\sigma(i)}. $$</p>
<p>In this talk, I want to share a few of the amazing things Avi said about these two functions, and how the things he said then reverberated through my entire career.</p>
<p>Firstly, like we all learn in kindergarten or whatever, the determinant is computable in polynomial time, for example by using Gaussian elimination. By contrast, Valiant proved in 1979 that <a href="https://en.wikipedia.org/wiki/Sharp-P-completeness_of_01-permanent">computing the permanent is #P-complete</a>&#8212;which means, at least as hard as any combinatorial counting problem, a class believed to be even harder than NP-complete.</p>
<p>So, despite differing from each other only by some innocent-looking -1 factors, which the determinant has but the permanent lacks, these two functions effectively engage different regions of mathematics. The determinant is linear-algebraic and geometric; it&#8217;s the product of the eigenvalues and the volume of the parallelipiped defined by the row vectors. But the permanent is much more stubbornly combinatorial. It&#8217;s not quite as pervasive in mathematics as the determinant is, though it does show up. As an example, if you have a bipartite graph G, then the permanent of G&#8217;s adjacency matrix counts the number of perfect matchings in G.</p>
<p>When n=2, computing the permanent doesn&#8217;t look too different from computing the determinant: indeed, we have</p>
<p>$$<br />
\text{Per}\left(<br />
\begin{array}<br />
[c]{cc}%<br />
a &amp; b\\<br />
c &amp; d<br />
\end{array}<br />
\right) =\text{Det}\left(<br />
\begin{array}<br />
[c]{cc}%<br />
a &amp; -b\\<br />
c &amp; d<br />
\end{array}<br />
\right).<br />
$$</p>
<p>But as n gets larger, the fact that the permanent is #P-complete means that it <i>must</i> get exponentially harder to compute than the determinant, unless basic complexity classes collapse. And indeed, to this day, the fastest known algorithm to compute an n×n permanent, <a href="https://en.wikipedia.org/wiki/Computing_the_permanent#Ryser_formula"><i>Ryser&#8217;s algorithm</i></a>, takes O(n2<sup>n</sup>) time, which is only modestly better than the brute-force algorithm that just sums all n! terms.</p>
<p>Yet interestingly, not <i>everything</i> about the permanent is hard. So for example, if A is nonnegative, then in 1997, <a href="http://www.cc.gatech.edu/~vigoda/Permanent.pdf">Jerrum, Sinclair, and Vigoda</a> famously gave a polynomial-time randomized algorithm to approximate Per(A) to within a 1+ε multiplicative factor, for ε&gt;0 as small as you like. As an even simpler example, if A is nonnegative and you just want to know whether its permanent is zero or nonzero, that&#8217;s equivalent to deciding whether a bipartite graph has at least one perfect matching. And we all know that that can be done in polynomial time.</p>
<hr />
<p>OK, but the usual algorithm from the textbooks that puts the matching problem in the class P is already a slightly nontrivial one&#8212;maybe first grade rather than kindergarten! It involves repeatedly using depth-first search to construct augmenting paths, then modifying the graph, etc. etc.</p>
<p>Sixteen years ago in Princeton, the first thing Avi said that blew my mind is that there&#8217;s a vastly simpler polynomial-time algorithm to decide whether a bipartite graph has a perfect matching&#8212;or equivalently, to decide whether a nonnegative matrix has a zero or nonzero permanent. This algorithm is not quite as efficient as the textbook one, but it makes up for it by being more magical.</p>
<p>So here&#8217;s what you do: you start with the 0/1 adjacency matrix of your graph. I&#8217;ll do a 2×2 example, since that&#8217;s all I&#8217;ll be able to compute on the fly:</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{cc}%<br />
1 &amp; 1\\<br />
0 &amp; 1<br />
\end{array}<br />
\right). $$</p>
<p>Then you normalize each row so it sums to 1. In the above example, this would give</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{cc}%<br />
\frac{1}{2} &amp; \frac{1}{2} \\<br />
0 &amp; 1<br />
\end{array}<br />
\right). $$</p>
<p>Next you normalize each <i>column</i> so it sums to 1:</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{cc}%<br />
1 &amp; \frac{1}{3} \\<br />
0 &amp; \frac{2}{3}<br />
\end{array}<br />
\right). $$</p>
<p>OK, but now the problem is that the rows are no longer normalized, so you normalize them again:</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{cc}%<br />
\frac{3}{4} &amp; \frac{1}{4} \\<br />
0 &amp; 1<br />
\end{array}<br />
\right). $$</p>
<p>Then you normalize the columns again, and so on. You repeat something like n<sup>3</sup>log(n) times. If, after that time, all the row sums and column sums have become within ±1/n of 1, then you conclude that the permanent was nonzero and the graph had a perfect matching. Otherwise, the permanent was zero and the graph had no perfect matching.</p>
<p>What gives? Well, it&#8217;s a nice exercise to prove why this works. I&#8217;ll just give you a sketch: first, when you multiply any row or column of a matrix by a scalar, you multiply the permanent by that same scalar. By using that fact, together with the arithmetic-geometric mean inequality, it&#8217;s possible to prove that, in every iteration but the first, when you rebalance all the rows or all the columns to sum to 1, you can&#8217;t be decreasing the permanent. The permanent increases monotonically.</p>
<p>Second, <i>if</i> the permanent is nonzero, then after the first iteration it&#8217;s at least 1/n<sup>n</sup>, simply because we started with a matrix of 0&#8217;s and 1&#8217;s.</p>
<p>Third, the permanent is always at most the product of the row sums or the product of the column sums, which after the first iteration is 1.</p>
<p>Fourth, at any iteration where there&#8217;s some row sum or column sum that&#8217;s far from 1, rescaling must not only increase the permanent, but increase it by an appreciable amount&#8212;like, a 1+1/n<sup>2</sup> factor or so.</p>
<p>Putting these four observations together, we find that <i>if</i> the permanent is nonzero, then our scaling procedure must terminate after a polynomial number of steps, with every row sum and every column sum close to 1&#8212;since otherwise, the permanent would just keep on increasing past its upper bound of 1.</p>
<p>But a converse statement is also true. Suppose the matrix can be scaled so that every row sum and every column sum gets within ±1/n of 1. Then the rescaled entries define a <i>flow</i> through the bipartite graph, with roughly the same amount of flow through each of the 2n vertices. But if such a flow exists, then <a href="https://math.berkeley.edu/~sagrawal/su14_math55/notes_hall.pdf">Hall&#8217;s Theorem</a> tells you that there must be a perfect matching (and hence the permanent must be nonzero)&#8212;since if a matching <i>didn&#8217;t</i> exist, then there would necessarily be a bottleneck preventing the flow.</p>
<p>Together with Nati Linial and Alex Samorodnitsky, Avi <a href="http://www.math.ias.edu/~avi/PUBLICATIONS/MYPAPERS/LSW98/lsw00.pdf">generalized this</a> to show that scaling the rows and columns gives you a polynomial-time algorithm to <i>approximate</i> the permanent of a nonnegative matrix. This basically follows from the so-called <a href="https://en.wikipedia.org/wiki/Permanent#Van_der_Waerden.27s_conjecture">Egorychev-Falikman Theorem</a>, which says that the permanent of a doubly stochastic matrix is at least n!/n<sup>n</sup>. The approximation ratio that you get this way, ~e<sup>n</sup>, isn&#8217;t nearly as good as Jerrum-Sinclair-Vigoda&#8217;s, but the advantage is that the algorithm is <i>deterministic</i> (and also ridiculously simple).</p>
<p>For myself, though, I just filed away this idea of matrix scaling for whenever I might need it. It didn&#8217;t take long. A year after Avi&#8217;s lecture, when I was a beginning grad student at Berkeley, I was obsessing about the foundations of quantum mechanics. Specifically, I was obsessing about the fact that, when you measure a quantum state, the rules of quantum mechanics tell you how to calculate the probability that you&#8217;ll see a particular outcome. But the rules are silent about so-called <i>multiple-time</i> or <i>transition</i> probabilities. In other words: suppose we adopt Everett&#8217;s <a href="https://en.wikipedia.org/wiki/Many-worlds_interpretation">Many-Worlds</a> view, according to which quantum mechanics needs to be applied consistently to every system, regardless of scale, so in particular, the state of the entire universe (including us) is a quantum superposition state. We perceive just one branch, but there are also these other branches where we made different choices or where different things happened to us, etc.</p>
<p>OK, fine: for me, that&#8217;s not the troubling part! The troubling part is that quantum mechanics rejects as meaningless questions like the following: given that you&#8217;re in <i>this</i> branch of the superposition at time t<sub>1</sub>, what&#8217;s the probability that you&#8217;ll be in <i>that</i> branch at time t<sub>2</sub>, after some unitary transformation is applied? Orthodox quantum mechanics would say: well, either someone measured you at time t<sub>1</sub>, in which case their act of measuring collapsed the superposition and created a whole new situation. Or else no one measured at t<sub>1</sub>&#8212;but in that case, your state at time t<sub>1</sub> <i>was</i> the superposition state, full stop. It&#8217;s sheer metaphysics to imagine a &#8220;real you&#8221; that jumps around from one branch of the superposition to another, having a sequence of definite experiences.</p>
<p>Granted, in practice, branches of the universe&#8217;s superposition that split from each other tend never to rejoin, for the same thermodynamic reasons why eggs tend never to unscramble themselves. And as long as the history of the Everettian multiverse has the structure of a tree, we <i>can</i> sensibly define transition probabilities. But if, with some technology of the remote future, we were able to do quantum interference experiments on human brains (or other conscious entities), the rules of quantum mechanics would no longer predict what those beings should see&#8212;not even probabilistically.</p>
<p>I was interested in the question: suppose we just wanted to <i>postulate</i> transition probabilities, with the transitions taking place in some fixed orthogonal basis. What would be a mathematically reasonable way to do that? And it occurred to me that one thing you could do is the following. Suppose for simplicity that you have a pure quantum state, which is just a unit vector of n complex numbers called <em>amplitudes</em>:</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{c}%<br />
\alpha_{1}\\<br />
\vdots\\<br />
\alpha_{n}%<br />
\end{array}<br />
\right) $$</p>
<p>Then the first rule of quantum mechanics says that you can apply any <i>unitary transformation</i> U (that is, any norm-preserving linear transformation) to map this state to a new one:</p>
<p>$$ \left(<br />
\begin{array}<br />
[c]{c}%<br />
\beta_{1}\\<br />
\vdots\\<br />
\beta_{n}%<br />
\end{array}<br />
\right) =\left(<br />
\begin{array}<br />
[c]{ccc}%<br />
u_{11} &amp; \cdots &amp; u_{1n}\\<br />
\vdots &amp; \ddots &amp; \vdots\\<br />
u_{n1} &amp; \cdots &amp; u_{nn}%<br />
\end{array}<br />
\right) \left(<br />
\begin{array}<br />
[c]{c}%<br />
\alpha_{1}\\<br />
\vdots\\<br />
\alpha_{n}%<br />
\end{array}<br />
\right). $$</p>
<p>The second rule of quantum mechanics, the famous <i>Born Rule</i>, says that if you measure in the standard basis before applying U, then the probability that you&#8217;ll find youself in state i equals |α<sub>i</sub>|<sup>2</sup>. Likewise, if you measure in the standard basis <i>after</i> applying U, the probability that you&#8217;ll find youself in state j equals |β<sub>j</sub>|<sup>2</sup>.</p>
<p>OK, but what&#8217;s the probability that you&#8217;re in state i at the initial time, <i>and then</i> state j at the final time? These joint probabilities, call them p<sub>ij</sub>, had better add up to |α<sub>i</sub>|<sup>2</sup> and |β<sub>j</sub>|<sup>2</sup>, if we sum the rows and columns respectively. And ideally, they should be &#8220;derived&#8221; in some way from the unitary U&#8212;so that for example, if u<sub>ij</sub>=0 then p<sub>ij</sub>=0 as well.</p>
<p>So here&#8217;s something you could do: start by replacing each u<sub>ij</sub> by its absolute value, to get a nonnegative matrix. Then, normalize the i<sup>th</sup> row so that it sums to |α<sub>i</sub>|<sup>2</sup>, for each i. Then normalize the j<sup>th</sup> column so that it sums to |β<sub>j</sub>|<sup>2</sup>, for each j. Then normalize the rows, then the columns, and keep iterating until hopefully you end up with all the rows <i>and</i> columns having the right sums.</p>
<p>So the first question I faced was, does this process converge? And I remembered what Avi taught me about the permanent. In this case, because of the nonuniform row and column scalings, the permanent no longer works as a progress measure, but there&#8217;s something else that <i>does</i> work. Namely, as a first step, we can use the <a href="https://en.wikipedia.org/wiki/Max-flow_min-cut_theorem">Max-Flow/Min-Cut Theorem</a> to show that there exists a nonnegative matrix F=(f<sub>ij</sub>) such that f<sub>ij</sub>=0 whenever u<sub>ij</sub>=0, and also</p>
<p>$$ \sum_j f_{ij} = \left|\alpha_i\right|^2 \forall i,\ \ \ \ \ \sum_i f_{ij} = \left|\beta_j\right|^2 \forall j. $$</p>
<p>Then, letting M=(m<sub>ij</sub>) be our current rescaled matrix (so that initially m<sub>ij</sub>:=|u<sub>ij</sub>|), we use</p>
<p>$$ \prod_{i,j : u_{ij}\ne 0} m_{ij}^{f_{ij}} $$</p>
<p>as our progress measure. By using the nonnegativity of the <a href="https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence">Kullback-Leibler divergence</a>, one can prove that this quantity never decreases. So then, just like with 0/1 matrices and the permanent, we get eventual convergence, and indeed convergence after a number of iterations that&#8217;s polynomial in n.</p>
<p>I was pretty stoked about this until I went to the library, and discovered that Erwin Schrödinger had proposed the same matrix scaling process in 1931! And Masao Nagasawa and others then <a href="http://www.springer.com/la/book/9783034805599">rigorously analyzed it</a>. OK, but their motivations were somewhat different, and for some reason they never talked about finite-dimensional matrices, only infinite-dimensional ones.</p>
<p>I can&#8217;t resist telling you my favorite open problem about this matrix scaling process: namely, is it stable under small perturbations? In other words, if I change one of the α<sub>i</sub>&#8216;s or u<sub>ij</sub>&#8216;s by some small ε, then do the final p<sub>ij</sub>&#8216;s also change by at most some small δ? To clarify, several people have shown me how to prove that the mapping to the p<sub>ij</sub>&#8216;s is <i>continuous</i>. But for computer science applications, one needs something stronger: namely that when the matrix M, and the row and column scalings, actually arise from a unitary matrix in the way above, we get strong uniform continuity, with a 1/n<sup>O(1)</sup> change to the inputs producing only a 1/n<sup>O(1)</sup> change to the outputs (and hopefully even better than that).</p>
<p>The more general idea that I was groping toward or reinventing here is called a <i>hidden-variable theory</i>, of which the most famous example is <a href="https://en.wikipedia.org/wiki/De_Broglie%E2%80%93Bohm_theory">Bohmian mechanics</a>. Again, though, Bohmian mechanics has the defect that it&#8217;s only formulated for some exotic state space that the physicists care about for some reason&#8212;a space involving pointlike objects called &#8220;particles&#8221; that move around in 3 Euclidean dimensions (why 3? why not 17?).</p>
<p>Anyway, this whole thing led me to wonder: under the Schrödinger scaling process, or something like it, what&#8217;s the computational complexity of <i>sampling</i> an entire history of the hidden variable through a quantum computation? (&#8220;If, at the moment of your death, your whole life history flashes before you in an instant, what can you <i>then</i> efficiently compute?&#8221;)</p>
<p>Clearly the complexity is at least <a href="https://en.wikipedia.org/wiki/BQP">BQP</a> (i.e., quantum polynomial time), because even sampling where the hidden variable is at a <i>single</i> time is equivalent to sampling the output distribution of a quantum computer. But could the complexity be even more than BQP, because of the <i>correlations</i> between the hidden variable values at different times? I noticed that, indeed, sampling a hidden variable history would let you do some crazy-seeming things, like solve the Graph Isomorphism problem in polynomial time (OK, fine, that seemed more impressive at the time than it does after <a href="https://arxiv.org/abs/1512.03547">Babai&#8217;s breakthrough</a>), or find collisions in arbitrary cryptographic hash functions, or more generally, solve any problem in the complexity class <a href="https://complexityzoo.uwaterloo.ca/Complexity_Zoo:S#szk">SZK</a> (Statistical Zero Knowledge).</p>
<p>But you might ask: what evidence do we have that any these problems are hard even for garden-variety quantum computers? As many of you know, it&#8217;s widely conjectured today that NP⊄BQP&#8212;i.e., that quantum computers can&#8217;t solve NP-complete problems in polynomial time. And in the &#8220;black box&#8221; setting, where all you know how to do is query candidate solutions to your NP-complete problem to check whether they&#8217;re valid, it&#8217;s been <i>proven</i> that quantum computers don&#8217;t give you an exponential speedup: the best they can give is the square-root speedup of <a href="https://en.wikipedia.org/wiki/Grover%27s_algorithm">Grover&#8217;s algorithm</a>.</p>
<p>But for these SZK problems, like finding collisions in hash functions, who the hell knows? So, this is the line of thought that led me to probably the most important thing I did in grad school, the so-called <a href="http://www.scottaaronson.com/papers/collision.pdf">quantum lower bound for collision-finding</a>. That result says that, if (again) your hash function is only accessible as a black box, then a quantum computer can provide at most a polynomial speedup over a classical computer for finding collisions in it (in this case, it turns out, at most a two-thirds power speedup). There are several reasons you might care about that, such as showing that one of the basic building blocks of modern cryptography could still be secure in a world with quantum computers, or proving an oracle separation between SZK and BQP. But my original motivation was just to understand how transition probabilities would change quantum computation.</p>
<hr />
<p>The permanent has also shown up in a much more direct way in my work on quantum computation. If we go back to Avi&#8217;s lecture from 2000, a <i>second</i> thing he said that blew my mind was that apparently, or so he had heard, even the fundamental particles of the universe know something about the determinant and the permanent. In particular, he said, fermions&#8212;the matter particles, like the quarks and electrons in this stage&#8212;have transition amplitudes that are determinants of matrices. Meanwhile, bosons&#8212;the force-carrying particles, like the photons coming from the ceiling that let you see this talk&#8212;have transition amplitudes that are permanents of matrices.</p>
<p>Or as Steven Weinberg, one of the great physicists on earth, memorably put it in the first edition of his recent <a href="https://www.amazon.com/Lectures-Quantum-Mechanics-Steven-Weinberg/dp/1107028728/ref=sr_1_2?ie=UTF8&amp;qid=1476303789&amp;sr=8-2&amp;keywords=weinberg+quantum+mechanics">quantum mechanics textbook</a>: &#8220;in the case of bosons, it is also a determinant, except without minus signs.&#8221; I&#8217;ve had the pleasure of getting to know Weinberg at Austin, so recently I asked him about that line. He told me that <i>of course</i> he knew that the determinant without minus signs is called a permanent, but he thought no one else would know! As far as he knew, the permanent was just some esoteric function used by a few quantum field theorists who needed to calculate boson amplitudes.</p>
<p>Briefly, the reason why the permanent and determinant turn up here is the following: whenever you have n particles that are identical, to calculate the amplitude for them to do something, you need to sum over all n! possible permutations of the particles. Furthermore, each contribution to the sum is a product of n complex numbers, one u<sub>ij</sub> for each particle that hops from i to j. But there&#8217;s a difference: when you swap two identical bosons, nothing happens, and that&#8217;s why bosons give rise to the permanent (of an n×n complex matrix, if there are n bosons). By contrast, when you swap two identical fermions, the amplitude for that state of the universe gets multiplied by -1, and that&#8217;s why fermions give rise to the determinant.</p>
<p>Anyway, Avi ended his talk with a quip about how unfair it seemed to the bosons that they should have to work so much harder than the fermions just to calculate where they should be!</p>
<p>And then that one joke of Avi&#8212;that way of looking at things&#8212;rattled around in my head for a decade, like a song I couldn&#8217;t get rid of. It raised the question: wait a minute, bosons&#8212;particles that occur in Nature&#8212;are governed by a #P-complete function? Does that mean we could actually use bosons to solve #P-complete problems in polynomial time? That seems ridiculous, like the kind of nonsense I&#8217;m fighting every few weeks on my blog! As I said before, most of us don&#8217;t even expect quantum computers to be able to solve NP-complete problems in polynomial time, let alone #P-complete ones.</p>
<p>As it happens, <a href="http://www.cs.huji.ac.il/labs/learning/Papers/perm.pdf">Troyansky and Tishby</a> had already taken up that puzzle in 1996. (Indeed Avi, being the social butterfly and hub node of our field that he is, had learned about the role of permaments and determinants in quantum mechanics from them.) What Troyansky and Tishby said was, it&#8217;s true that if you have a system of n identical, non-interacting bosons, their transition amplitudes are given by permanents of n×n matrices. OK, but amplitudes in quantum mechanics are not directly observable. They&#8217;re just what you use to calculate the probability that you&#8217;ll see this or that measurement outcome. But if you try to encode a hard instance of a #P-complete problem into a bosonic system, the relevant amplitudes will in general be exponentially small. And that means that, if you want a decent estimate of the permanent, you&#8217;ll need to repeat the experiment an exponential number of times. So OK, they said, nice try, but this doesn&#8217;t give you a computational advantage after all in calculating the permanent compared to classical brute force.</p>
<p>In our <a href="http://www.scottaaronson.com/papers/optics.pdf">2011 work on BosonSampling</a>, my student Alex Arkhipov and I reopened the question. We said, not so fast. It&#8217;s true that bosons don&#8217;t seem to help you in estimating the permanent of a <i>specific</i> matrix of your choice. But what if your goal was just to sample a <i>random</i> n×n matrix A∈C<sup>n×n</sup>, in a way that&#8217;s somehow biased toward matrices with larger permanents? Now, <i>why</i> would that be your goal? I have no idea! But this sampling is something that a bosonic system would easily let you do.</p>
<p>So, what Arkhipov and I proved was that this gives rise to a class of probability distributions that can be sampled in quantum polynomial time (indeed, by a very rudimentary type of quantum computer), but that can&#8217;t be sampled in classical polynomial time unless the <a href="https://en.wikipedia.org/wiki/Polynomial_hierarchy">polynomial hierarchy</a> collapses to the third level. And even though you&#8217;re not solving a #P-complete problem, the #P-completeness of the permanent still plays a crucial role in explaining why the sampling problem is hard. (Basically, one proves that the probabilities are #P-hard even to approximate, but that <i>if</i> there were a fast classical sampling algorithm, then the probabilities could be approximated in the class BPP<sup>NP</sup>. So if a fast classical sampling algorithm existed, then P<sup>#P</sup> would equal BPP<sup>NP</sup>, which would collapse the polynomial hierarchy by <a href="https://en.wikipedia.org/wiki/Toda%27s_theorem">Toda&#8217;s Theorem</a>.)</p>
<p>When we started on this, Arkhipov and I thought about it as just pure complexity theory&#8212;conceptually clarifying what role the #P-completeness of the permanent plays in physics. But then at some point it occurred to us: bosons (such as photons) <i>actually exist</i>, and experimentalists in quantum optics like to play with them, so maybe they could demonstrate some of this stuff in the lab. And as it turned out, the quantum optics people were looking for something to do at the time, and they ate it up.</p>
<p>Over the past five years, a trend has arisen in experimental physics that goes by the name &#8220;Quantum Supremacy,&#8221; although some people are now backing away from the name because of Trump. The idea is: without yet having a universal quantum computer, can we use the hardware that we&#8217;re able to build today to demonstrate the reality of a quantum-computational speedup as clearly as possible? Not necessarily for a useful problem, but just for <i>some</i> problem? Of course, no experiment can prove that something is scaling polynomially rather than exponentially, since that&#8217;s an asymptotic statement. But an experiment could certainly raise the stakes for the people who deny such a statement&#8212;for example, by solving something a trillion times faster than we know how to solve it otherwise, using methods for which we don&#8217;t know a reason for them <i>not</i> to scale.</p>
<p>I like to say that for me, the #1 application of quantum computing, more than breaking RSA or even simulating physics and chemistry, is simply disproving the people who say that quantum computing is impossible! So, quantum supremacy targets <i>that</i> application.</p>
<p>Experimental BosonSampling has become a major part of the race to demonstrate quantum supremacy. By now, at least a half-dozen groups around the world have reported small-scale implementations&#8212;the <a href="http://www.scottaaronson.com/blog/?p=2435">record</a>, so far, being an experiment at Bristol that used 6 photons, and experimentally confirmed that, yes, their transition amplitudes are given by permanents of 6×6 complex matrices. The challenge now is to build single-photon sources that are good enough that you could scale up to (let&#8217;s say) 30 photons, which is where you&#8217;d really start seeing a quantum advantage over the best known classical algorithms. And again, this whole quest really started with Avi&#8217;s joke.</p>
<p>A year after my and Arkhipov&#8217;s work, I noticed that one also can run the connection between quantum optics and the permanent <a href="http://www.scottaaronson.com/papers/sharp.pdf">in the &#8220;reverse&#8221; direction</a>. In other words: with BosonSampling, we used the famous theorem of Valiant, that the permanent is #P-complete, to help us argue that bosons can solve hard sampling problems. But if we know by some other means that quantum optics lets us encode #P-complete problems, then we can use that to give an independent, &#8220;quantum&#8221; proof that the permanent is #P-complete in the first place! As it happens, there <i>is</i> another way to see why quantum optics lets us encode #P-complete problems. Namely, we can use celebrated work by <a href="https://arxiv.org/abs/quant-ph/0006088">Knill, Laflamme, and Milburn</a> (KLM) from 2001, which showed how to perform universal quantum computation using quantum optics with the one additional resource of &#8220;feed-forward measurements.&#8221; With minor modifications, the construction by KLM also lets us encode a #P-complete problem into a bosonic amplitude, which we know is a permanent&#8212;thereby proving that the permanent is #P-complete, in what I personally regard as a much more intuitive way than Valiant&#8217;s original approach based on cycle covers. This illustrates a theme that we&#8217;ve seen over and over in the last 13 years or so, which is the use of quantum methods and arguments to gain insight even about classical computation.</p>
<p>Admittedly, I wasn&#8217;t proving anything here in classical complexity theory that wasn&#8217;t already known, just giving a different proof for an old result! Extremely recently, however, my students Daniel Grier and Luke Schaeffer have extended my argument based on quantum optics, to show that computing the permanent of a unitary or orthogonal matrix is #P-complete. (Indeed, even over finite fields of characteristic k, computing the permanent of an orthogonal matrix is a <a href="https://complexityzoo.uwaterloo.ca/Complexity_Zoo:M#modkp">Mod<sub>k</sub>P</a>-complete problem, as long as k is not 2 or 3&#8212;which turns out to be the tight answer.) This is not a result that we previously knew by <i>any</i> means, whether quantum or classical.</p>
<p>I can&#8217;t resist telling you the biggest theoretical open problem that arose from my and Arkhipov&#8217;s work. We would like to say: even if you had a polynomial-time algorithm that sampled a probability distribution that was merely <i>close</i>, in variation distance, to the BosonSampling distribution, that would already imply a collapse of the polynomial hierarchy. But we&#8217;re only able to prove that assuming a certain problem is #P-complete, which no one has been able to prove #P-complete. That problem is the following:</p>
<blockquote><p>Given an n×n matrix A, each of whose entries is an i.i.d. complex Gaussian with mean 0 and variance 1 (that is, drawn from N(0,1)<sub>C</sub>), estimate |Per(A)|<sup>2</sup>, to within additive error ±ε·n!, with probability at least 1-δ over the choice of A. Do this in time polynomial in n, 1/ε, and 1/δ.</p></blockquote>
<p>Note that, if you care about exactly computing the permanent of a Gaussian random matrix, <i>or</i> about approximating the permanent of an arbitrary matrix, we know how to prove both of those problems #P-complete. The difficulty &#8220;only&#8221; arises when we combine approximation and average-case in the same problem.</p>
<p>At the moment, we don&#8217;t even know something more basic, which is: what&#8217;s the <i>distribution</i> over |Per(A)|<sup>2</sup>, when A is an n×n matrix of i.i.d. N(0,1)<sub>C</sub> Gaussians? Based on numerical evidence, we conjecture that the distribution converges to lognormal as n gets large. By using the interpretation of the determinant as the volume of a parallelipiped, we can <a href="https://arxiv.org/abs/1309.7460">prove</a> that the distribution over |Det(A)|<sup>2</sup> converges to lognormal. And the distribution over |Per(A)|<sup>2</sup> looks almost the same when you plot it. But not surprisingly, the permanent is harder to analyze.</p>
<hr />
<p>This brings me to my final vignette. Why would anyone even suspect that approximating the permanent of a Gaussian <i>random</i> matrix would be a #P-hard problem? Well, because if you look at the permanent of an n×n matrix over a large enough <i>finite</i> field, say F<sub>p</sub>, that function famously has the property of <a href="https://en.wikipedia.org/wiki/Random_self-reducibility"><i>random self-reducibility</i></a>. This means: the ability to calculate such a permanent in polynomial time, on 90% all matrices in F<sub>p</sub><sup>n×n</sup>, or even for that matter on only 1% of them, implies the ability to calculate it in polynomial time on <i>every</i> such matrix.</p>
<p>The reason for this is simply that the permanent is a low-degree polynomial, and low-degree polynomials have extremely useful error-correcting properties. In particular, if you can compute such a polynomial on any large fraction of points, then you can do noisy polynomial interpolation (e.g., the <a href="https://en.wikipedia.org/wiki/Berlekamp%E2%80%93Welch_algorithm">Berlekamp-Welch algorithm</a>, or <a href="https://en.wikipedia.org/wiki/List_decoding">list decoding</a>), in order to get the value of the polynomial on an <i>arbitrary</i> point.</p>
<p>I don&#8217;t specifically remember Avi talking about the random self-reducibility of the permanent in his 2000 lecture, but he obviously <i>would have</i> talked about it! And it was really knowing about the random self-reducibility of the permanent, and how powerful it was, that let me and Alex Arkhipov to the study of BosonSampling in the first place.</p>
<p>In complexity theory, the random self-reducibility of the permanent is hugely important because it sort of the spark for some of our most convincing examples of <i>non-relativizing</i> results&#8212;that is, results that fail relative to a suitable oracle. The most famous such result is that #P, and for that matter even <a href="https://en.wikipedia.org/wiki/PSPACE">PSPACE</a>, admit interactive protocols (the <a href="https://en.wikipedia.org/wiki/IP_(complexity)">IP=PSPACE theorem</a>). In the 1970s, Baker, Gill, and Solovay pointed out that non-relativizing methods would be needed to resolve P vs. NP and many of the other great problems of the field.</p>
<p>In 2007, Avi and I wrote <a href="http://www.scottaaronson.com/papers/alg.pdf">our only joint paper so far</a>. In that paper, we decided to take a closer look at the non-relativizing results based on interactive proofs. We said: while it&#8217;s true that these results don&#8217;t relativize&#8212;that is, there are oracles relative to which they fail&#8212;nevertheless, these results hold relative to all oracles that themselves encode low-degree polynomials over finite fields (such as the permanent). So, introducing a term, Avi and I said that results like IP=PSPACE <i>algebrize</i>.</p>
<p>But then we also showed that, if you want to prove P≠NP&#8212;or for that matter, even prove circuit lower bounds that go &#8220;slightly&#8221; beyond what&#8217;s already known (such as <a href="https://en.wikipedia.org/wiki/NEXPTIME">NEXP</a>⊄<a href="https://en.wikipedia.org/wiki/P/poly">P/poly</a>)&#8212;you&#8217;ll need techniques that are not only non-relativizing, but <i>also</i> non-algebrizing. So in some sense, the properties of the permanent that are used (for example) in proving that it has an interactive protocol, just &#8220;aren&#8217;t prying the black box open wide enough.&#8221;</p>
<p>I have a more recent result, from 2011 or so, that I never got around to finishing a paper about. In this newer work, I decided to take another look at the question: what is it about the permanent that <i>actually</i> fails to relativize? And I prove the following result: relative to an <i>arbitrary</i> oracle A, the class #P has complete problems that are both random self-reducible and downward self-reducible (that is, reducible to smaller instances of the same problem). So, contrary to what certainly I and maybe others had often thought, it&#8217;s <i>not</i> the random self-reducibility of the permanent that&#8217;s the crucial thing about it. What&#8217;s important, instead, is a further property that the permanent has, of being <i>self-checkable</i> and <i>self-correctible</i>.</p>
<p>In other words: given (say) a noisy circuit for the permanent, it&#8217;s not just that you can correct that circuit to compute whichever low-degree polynomial it was close to computing. Rather, it&#8217;s that you can confirm that the polynomial is in fact the permanent, and nothing else.</p>
<p>I like the way Ketan Mulmuley thinks about this phenomenon in his <a href="http://gct.cs.uchicago.edu/">Geometric Complexity Theory</a>, which is a speculative, audacious program to try to <i>prove</i> that the permanent is harder than the determinant, and to tackle the other great separation questions of complexity theory (including P vs. NP), by using algebraic geometry and representation theory. Mulmuley says: the permanent is a polynomial in the entries of an n×n matrix that not only satisfies certain symmetries (e.g., under interchanging rows or columns), but is <i>uniquely characterized</i> by those symmetries. In other words, if you find a polynomial that passes certain tests&#8212;for example, if it behaves in the right way under rescaling and interchanging rows and columns&#8212;then that polynomial <i>must</i> be the permanent, or a scalar multiple of the permanent. Similarly, if you find a polynomial that passes the usual interactive proof for the permanent, that polynomial must be the permanent. I think this goes a long way toward explaining why the permanent is so special: it&#8217;s not just any hard-to-compute, low-degree polynomial; it&#8217;s one that you can recognize when you come across it.</p>
<hr />
<p>I&#8217;ve now told you about the eventual impact of one single survey talk that Avi gave 16 years ago&#8212;not even a particularly major or important one. So you can only imagine what Avi&#8217;s impact must have been on all of us, if you integrate over all the talks he&#8217;s given and papers he&#8217;s written and young people he&#8217;s mentored and connections he&#8217;s made his entire career. May that impact be permanent.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2925</wfw:commentRss>
		<slash:comments>41</slash:comments>
		</item>
		<item>
		<title>Stuff That&#8217;s Happened</title>
		<link>http://www.scottaaronson.com/blog/?p=2918</link>
		<comments>http://www.scottaaronson.com/blog/?p=2918#comments</comments>
		<pubDate>Sun, 09 Oct 2016 18:19:03 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Adventures in Meatspace]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Complexity]]></category>
		<category><![CDATA[The Fate of Humanity]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2918</guid>
		<description><![CDATA[Hi from FOCS&#8217;2016 in scenic New Brunswick, NJ!  (I just got here from Avi Wigderson&#8217;s 60th birthday conference, to which I&#8217;ll devote another post.) In the few weeks since I last overcame the activation barrier to blog, here are some things that happened. Politics Friday&#8217;s revelation, of Trump boasting on tape to George W. Bush&#8217;s [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Hi from <a href="http://dimacs.rutgers.edu/FOCS16/">FOCS&#8217;2016</a> in scenic New Brunswick, NJ!  (I just got here from <a href="https://www.math.ias.edu/avi60">Avi Wigderson&#8217;s 60th birthday conference</a>, to which I&#8217;ll devote another post.)</p>
<p>In the few weeks since I last overcame the activation barrier to blog, here are some things that happened.</p>
<hr />
<p><strong>Politics</strong></p>
<p>Friday&#8217;s revelation, of Trump boasting on tape to George W. Bush&#8217;s cousin about his crotch-grabbing escapades, did not increase my opposition to Trump, for a very simple reason: because I&#8217;d already opposed Trump by the maximum amount that&#8217;s possible.  Nevertheless, I&#8217;ll be gratified if this news brings Trump down, and leads to the landslide defeat he&#8217;s deserved from the beginning for 10<sup>1000</sup> reasons.</p>
<p>Still, history (including the history of this election) teaches us not to take things for granted.  So if you&#8217;re <em>still</em> thinking of voting for Trump, let me recommend <a href="http://slatestarcodex.com/2016/09/28/ssc-endorses-clinton-johnson-or-stein/">Scott Alexander&#8217;s endorsement</a> of &#8220;anyone but Trump.&#8221;  I&#8217;d go even further than my fellow Scott A. in much of what he says, but his post is nevertheless a masterful document, demonstrating how someone who <em>nobody</em> could accuse of being a statist social-justice warrior, but who &#8220;merely&#8221; has a sense for science and history and Enlightenment ideals and the ironic and absurd, can reach the conclusion that Trump had better be stopped, and with huge argumentative margin to spare.</p>
<p>See also <a href="http://www.huffingtonpost.com/entry/can-game-theory-save-voters-from-ourselves-and-donald_us_57f35f4ce4b0f482f8f0bca4?">an interview with me on <em>Huffington Post</em></a> about TrumpTrading, conducted by Linchuan Zhang.  If you live in a swing state and support Johnson, or in a safe state and support Hillary, I still recommend signing up, since even a 13% probability of a Trump win is too high.  I&#8217;ve found a partner in Ohio, a libertarian-leaning professor.  The only way I can foresee not going through with the swap, is if the bus tape causes Trump&#8217;s popularity to drop so precipitously that <em>Texas</em> becomes competitive.</p>
<p>In the meantime, it&#8217;s also important that we remain vigilant about the integrity of the election&#8212;not about in-person voter fraud, which statistically doesn&#8217;t exist, but about intimidation at the polls and the purging of eligible voters and tampering with electronic voting machines.  As I&#8217;ve mentioned before on this blog, my childhood friend <a href="https://jhalderm.com/">Alex Halderman</a>, now a CS professor at the University of Michigan, has been at the forefront of demonstrating the security problems with electronic voting machines, and advocating for paper trails.  Alex and his colleagues have actually succeeded in influencing how elections are conducted in many states&#8212;but not in all of them.  If you want to learn more, check out an <a href="http://www.playboy.com/articles/technology-will-destroy-democracy">in-depth profile of Alex</a> in the latest issue of <em>Playboy</em>.  (There&#8217;s no longer nudity in <em>Playboy</em>, so you can even read the thing at work&#8230;)</p>
<hr />
<p><strong>Now On To SCIENCE</strong></p>
<p>As some of you probably saw, Mohammad Bavarian, Giulio Gueltrini, and I put out a <a href="http://eccc.hpi-web.de/report/2016/146/">new paper</a> about computability theory in a universe with closed timelike curves.  This complements my and John Watrous&#8217;s <a href="http://www.scottaaronson.com/papers/ctc.pdf">earlier work</a> about <em>complexity</em> theory in a CTC universe, where we showed that finding a fixed-point of a bounded superoperator is a PSPACE-complete problem.  In the new work, we show that finding a fixed-point of an <em>un</em>bounded superoperator has the same difficulty as the halting problem.</p>
<p>Some of you will also have seen that folks from the Machine Intelligence Research Institute (MIRI)&#8212;Scott Garrabrant, Tsvi Benson-Tilsen, Andrew Critch, Nate Soares, and Jessica Taylor&#8212;recently put out a <a href="https://intelligence.org/files/LogicalInduction.pdf">major 130-page paper entitled &#8220;Logical Induction&#8221;</a>.  (See also their <a href="https://intelligence.org/2016/09/12/new-paper-logical-induction/">blog announcement</a>.)  This paper takes direct aim at a question that&#8217;s come up repeatedly in the comments section of this blog: namely, how can we sensibly assign probabilities to mathematical statements, such as &#8220;the 10<sup>10^1000</sup>th decimal digit of π is a 3&#8243;?  The paper proposes an essentially <em>economic</em> framework for that question, involving a marketplace for &#8220;mathematical truth futures,&#8221; in which new mathematical truths get revealed one by one, and one doesn&#8217;t want any polynomial-time traders to be able to make an infinite amount of money by finding patterns in the truths that the prices haven&#8217;t already factored in.  I won&#8217;t be able to do justice to the work in this paragraph (or even come close), but I hope this sophisticated paper gets the attention it deserves from mathematicians, logicians, CS theorists, AI people, economists, and anyone else who&#8217;s ever wondered how a &#8220;Bayesian&#8221; could sleep at night after betting on (say) the truth or falsehood of Goldbach&#8217;s Conjecture.  Feel free to discuss in the comments section.</p>
<p>My PhD student Adam Bouland and former visiting student Lijie Chen, along with Dhiraj Holden, Justin Thaler, and Prashant Vasudevan, have <a href="http://eccc.hpi-web.de/report/2016/140/">put out a new paper</a> that achieves an oracle separation between the complexity classes <a href="https://complexityzoo.uwaterloo.ca/Complexity_Zoo:S#szk">SZK</a> and <a href="https://en.wikipedia.org/wiki/PP_(complexity)">PP</a> (among many other things)&#8212;thereby substantially generalizing my quantum lower bound for the collision problem, and solving an open problem that I&#8217;d thought about without success since 2002.  Huge relativized congratulations to them!</p>
<p>A new paper by my PhD student Shalev Ben-David and Or Sattath, about using ideas from quantum money to create signed quantum tokens, has been making the rounds on social media.  Why?  <a href="https://arxiv.org/abs/1609.09047">Read the abstract</a> and see for yourself!  (My only &#8220;contribution&#8221; was to tell them not to change a word.)</p>
<p>Several people wrote in to tell me about a <a href="https://arxiv.org/abs/1608.08225">recent paper by Henry Lin and Max Tegmark</a>, which tries to use physics analogies and intuitions to explain why deep learning works as well as it does.  To my inexpert eyes, the paper seemed to contain a lot of standard insights from computational learning theory (for example, the need to exploit symmetries and regularities in the world to get polynomial-size representations), but expressed in a different language.  What confused me most was the paper&#8217;s claim to prove &#8220;no-flattening theorems&#8221; showing the necessity of large-depth neural networks&#8212;since in the sense I would mean, such a theorem couldn&#8217;t possibly be proved without a major breakthrough in computational complexity (e.g., separating the levels of the class <a href="https://en.wikipedia.org/wiki/TC0">TC<sup>0</sup></a>). Again, anyone who understands what&#8217;s going on is welcome to share in the comments section.</p>
<p>Sevag Gharibian asked me to advertise that the <a href="http://computationalcomplexity.org/Archive/2017/cfp.html">Call for Papers</a> for the 2017 Conference on Computational Complexity, to be held July 6-9 in Riga, Latvia, is now up.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2918</wfw:commentRss>
		<slash:comments>79</slash:comments>
		</item>
		<item>
		<title>The No-Cloning Theorem and the Human Condition: My After-Dinner Talk at QCRYPT</title>
		<link>http://www.scottaaronson.com/blog/?p=2903</link>
		<comments>http://www.scottaaronson.com/blog/?p=2903#comments</comments>
		<pubDate>Mon, 19 Sep 2016 15:14:15 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Adventures in Meatspace]]></category>
		<category><![CDATA[Embarrassing Myself]]></category>
		<category><![CDATA[Metaphysical Spouting]]></category>
		<category><![CDATA[Quantum]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2903</guid>
		<description><![CDATA[The following are the after-dinner remarks that I delivered at QCRYPT&#8217;2016, the premier quantum cryptography conference, on Thursday Sep. 15 in Washington DC.  You could compare to my after-dinner remarks at QIP&#8217;2006 to see how much I&#8217;ve &#8220;&#8221;matured&#8221;&#8221; since then. Thanks so much to Yi-Kai Liu and the other organizers for inviting me and for [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The following are the after-dinner remarks that I delivered at <a href="http://2016.qcrypt.net/">QCRYPT&#8217;2016</a>, the premier quantum cryptography conference, on Thursday Sep. 15 in Washington DC.  You could compare to <a href="http://www.scottaaronson.com/blog/?p=49">my after-dinner remarks at QIP&#8217;2006</a> to see how much I&#8217;ve &#8220;&#8221;matured&#8221;&#8221; since then. Thanks so much to Yi-Kai Liu and the other organizers for inviting me and for putting on a really fantastic conference.</p>
<hr />
<p>It&#8217;s wonderful to be here at QCRYPT among so many friends&#8212;this is the first significant conference I&#8217;ve attended since I moved from MIT to Texas. I do, however, need to register a complaint with the organizers, which is: why wasn&#8217;t I allowed to bring my concealed firearm to the conference? You know, down in Texas, we don&#8217;t look too kindly on you academic elitists in Washington DC telling us what to do, who we can and can&#8217;t shoot and so forth. Don&#8217;t mess with Texas! As you might&#8217;ve heard, many of us Texans even support a big, beautiful, physical wall being built along our border with Mexico. Personally, though, I don&#8217;t think the wall proposal goes far enough. Forget about illegal immigration and smuggling: I don&#8217;t even want Americans and Mexicans to be able to win the <a href="https://en.wikipedia.org/wiki/CHSH_inequality">CHSH game</a> with probability exceeding 3/4. Do any of you know what kind of wall could prevent <i>that</i>? Maybe a <i>meta</i>physical wall.</p>
<p>OK, but that&#8217;s not what I wanted to talk about. When Yi-Kai asked me to give an after-dinner talk, I wasn&#8217;t sure whether to try to say something actually relevant to quantum cryptography or just make jokes. So I&#8217;ll do something in between: I&#8217;ll tell you about research directions in quantum cryptography that are <i>also</i> jokes.</p>
<p>The subject of this talk is a deep theorem that stands as one of the crowning achievements of our field. I refer, of course, to the <a href="https://en.wikipedia.org/wiki/No-cloning_theorem">No-Cloning Theorem</a>. Almost everything we&#8217;re talking about at this conference, from <a href="https://en.wikipedia.org/wiki/Quantum_key_distribution">QKD</a> onwards, is based in some way on quantum states being unclonable. If you read <a href="http://dl.acm.org/citation.cfm?id=1008920">Stephen Wiesner&#8217;s paper from 1968</a>, which founded quantum cryptography, the No-Cloning Theorem already played a central role&#8212;although Wiesner didn&#8217;t call it that. By the way, here&#8217;s my #1 piece of research advice to the students in the audience: if you want to become immortal, just find some fact that everyone already knows and give it a name!</p>
<p>I&#8217;d like to pose the question: why should our universe be governed by physical laws that make the No-Cloning Theorem true? I mean, it&#8217;s <i>possible</i> that there&#8217;s some other reason for our universe to be quantum-mechanical, and No-Cloning is just a byproduct of that. No-Cloning would then be like the armpit of quantum mechanics: not there because it does anything useful, but just because there&#8217;s gotta be <i>something</i> under your arms.</p>
<p>OK, but No-Cloning <i>feels</i> really fundamental. One of my early memories is when I was 5 years old or so, and utterly transfixed by my dad&#8217;s home fax machine, one of those crappy 1980s fax machines with wax paper. I kept thinking about it: is it really true that a piece of paper gets transmaterialized, sent through a wire, and reconstituted at the other location? Could I have been <i>that</i> wrong about how the universe works? Until finally I got it&#8212;and once you get it, it&#8217;s hard even to recapture your original confusion, because it becomes so obvious that the world is made not of stuff but of copyable bits of information. &#8220;Information wants to be free!&#8221;</p>
<p>The No-Cloning Theorem represents nothing less than a partial return to the view of the world that I had before I was five. It says that quantum information <i>doesn&#8217;t</i> want to be free: it wants to be private. There is, it turns out, a kind of information that&#8217;s tied to a particular place, or set of places. It can be moved around, or even teleported, but it can&#8217;t be copied the way a fax machine copies bits.</p>
<p>So I think it&#8217;s worth at least entertaining the possibility that we don&#8217;t have No-Cloning because of quantum mechanics; we have quantum mechanics because of No-Cloning&#8212;or because quantum mechanics is the simplest, most elegant theory that has unclonability as a core principle. But if so, that just pushes the question back to: why <i>should</i> unclonability be a core principle of physics?</p>
<hr />
<p><b>Quantum Key Distribution</b></p>
<p>A first suggestion about this question came from Gilles Brassard, who&#8217;s here. Years ago, I attended a talk by Gilles in which he speculated that the laws of quantum mechanics are what they are <i>because</i> Quantum Key Distribution (QKD) has to be possible, while bit commitment has to be <i>im</i>possible. If true, that would be awesome for the people at this conference. It would mean that, far from being this exotic competitor to RSA and Diffie-Hellman that&#8217;s distance-limited and bandwidth-limited and has a tiny market share right now, QKD would be the entire reason why the universe is as it is! Or maybe what this really amounts to is an appeal to the Anthropic Principle. Like, if QKD <i>hadn&#8217;t</i> been possible, then we wouldn&#8217;t be here at QCRYPT to talk about it.</p>
<hr />
<p><b>Quantum Money</b></p>
<p>But maybe we should search more broadly for the reasons why our laws of physics satisfy a No-Cloning Theorem. Wiesner&#8217;s paper sort of hinted at QKD, but the main thing it had was a scheme for unforgeable quantum money. This is one of the most direct uses imaginable for the No-Cloning Theorem: to store economic value in something that it&#8217;s physically impossible to copy. So maybe <i>that&#8217;s</i> the reason for No-Cloning: because God wanted us to have e-commerce, and didn&#8217;t want us to have to bother with blockchains (and certainly not with credit card numbers).</p>
<p>The central difficulty with quantum money is: how do you authenticate a bill as genuine? (OK, fine, there&#8217;s also the dificulty of how to keep a bill coherent in your wallet for more than a microsecond or whatever. But we&#8217;ll leave that for the engineers.)</p>
<p>In Wiesner&#8217;s original scheme, he solved the authentication problem by saying that, whenever you want to verify a quantum bill, you bring it back to the bank that printed it. The bank then looks up the bill&#8217;s classical serial number in a giant database, which tells the bank in which basis to measure each of the bill&#8217;s qubits.</p>
<p>With this system, you can actually get information-theoretic security against counterfeiting. OK, but the fact that you have to bring a bill to the bank to be verified negates much of the advantage of quantum money in the first place. If you&#8217;re going to keep involving a bank, then why not just use a credit card?</p>
<p>That&#8217;s why over the past decade, some of us have been working on <i>public-key</i> quantum money: that is, quantum money that anyone can verify. For this kind of quantum money, it&#8217;s easy to see that the No-Cloning Theorem is no longer enough: you also need some cryptographic assumption. But OK, we can consider that. In recent years, we&#8217;ve achieved glory by proposing a huge variety of public-key quantum money schemes&#8212;and we&#8217;ve achieved even greater glory by breaking almost all of them!</p>
<p>After a while, there were basically two schemes left standing: <a href="https://arxiv.org/abs/1004.5127">one based on knot theory</a> by Ed Farhi, Peter Shor, et al. That one has been proven to be secure under the assumption that it can&#8217;t be broken. The <a href="http://arxiv.org/abs/1203.4740">second scheme</a>, which Paul Christiano and I proposed in 2012, is based on hidden subspaces encoded by multivariate polynomials. For our scheme, Paul and I were able to do better than Farhi et al.: we gave a <i>security reduction</i>. That is, we <i>proved</i> that our quantum money scheme is secure, <i>unless</i> there&#8217;s a polynomial-time quantum algorithm to find hidden subspaces encoded by low-degree multivariate polynomials (yadda yadda, you can look up the details) with much greater success probability than we thought possible.</p>
<p>Today, the situation is that my and Paul&#8217;s security proof remains completely valid, but meanwhile, our money is completely insecure! Our reduction means the opposite of what we thought it did. There <i>is</i> a break of our quantum money scheme, and <i>as a consequence</i>, there&#8217;s also a quantum algorithm to find large subspaces hidden by low-degree polynomials with much better success probability than we&#8217;d thought. What happened was that first, some French algebraic cryptanalysts&#8212;Faugere, Pena, I can&#8217;t pronounce their names&#8212;used Gröbner bases to <a href="https://hal.inria.fr/hal-01098223/document">break</a> the noiseless version of scheme, in classical polynomial time. So I thought, phew! At least I had acceded when Paul insisted that we also include a noisy version of the scheme. But later, Paul noticed that there&#8217;s a quantum reduction from the problem of breaking our noisy scheme to the problem of breaking the noiseless one, so the former is broken as well.</p>
<p>I&#8217;m choosing to spin this positively: &#8220;we used quantum money to discover a striking new quantum algorithm for finding subspaces hidden by low-degree polynomials. Err, yes, that&#8217;s exactly what we did.&#8221;</p>
<p>But, bottom line, until we manage to invent a better public-key quantum money scheme, or otherwise sort this out, I don&#8217;t think we&#8217;re entitled to claim that God put unclonability into our universe in order for quantum money to be possible.</p>
<hr />
<p><b>Copy-Protected Quantum Software</b></p>
<p>So if not money, then what about its cousin, copy-protected software&#8212;could <i>that</i> be why No-Cloning holds? By copy-protected quantum software, I just mean a quantum state that, if you feed it into your quantum computer, lets you evaluate some Boolean function on any input of your choice, but that <i>doesn&#8217;t</i> let you efficiently prepare <i>more</i> states that let the same function be evaluated. I think this is important as one of the preeminent <i>evil</i> applications of quantum information. Why should nuclear physicists and genetic engineers get a monopoly on the evil stuff?</p>
<p>OK, but is copy-protected quantum software even possible? The first worry you might have is that, yeah, maybe it&#8217;s possible, but then every time you wanted to run the quantum program, you&#8217;d have to make a measurement that destroyed it. So then you&#8217;d have to go back and buy a new copy of the program for the next run, and so on. Of course, to the software company, this would presumably be a feature rather than a bug!</p>
<p>But as it turns out, there&#8217;s a fact many of you know&#8212;sometimes called the &#8220;Gentle Measurement Lemma,&#8221; other times the &#8220;Almost As Good As New Lemma&#8221;&#8212;which says that, as long as the outcome of your measurement on a quantum state could be predicted almost with certainty given knowledge of the state, the measurement can be implemented in such a way that it hardly damages the state at all. This tells us that, if quantum money, copy-protected quantum software, and the other things we&#8217;re talking about are possible at all, then they can also be made reusable. I summarize the principle as: &#8220;if rockets, then space shuttles.&#8221;</p>
<p>Much like with quantum money, one can show that, relative to a suitable oracle, it&#8217;s possible to quantumly copy-protect <i>any</i> efficiently computable function&#8212;or rather, any function that&#8217;s hard to learn from its input/output behavior. Indeed, the implementation can be not only copy-protected but also <i>obfuscated</i>, so that the user learns nothing <i>besides</i> the input/output behavior. As Bill Fefferman pointed out in his talk this morning, the No-Cloning Theorem lets us bypass Barak et al.&#8217;s famous result on the impossibility of obfuscation, because their impossibility proof assumed the ability to <i>copy</i> the obfuscated program.</p>
<p>Of course, what we really care about is whether quantum copy-protection is possible in the <i>real</i> world, with no oracle. I was <a href="http://www.scottaaronson.com/papers/noclone-ccc.pdf">able to give</a> candidate implementations of quantum copy-protection for extremely special functions, like one that just checks the validity of a password. In the general case&#8212;that is, for arbitrary programs&#8212;Paul Christiano has a beautiful proposal for how to do it, which builds on our hidden-subspace money scheme. Unfortunately, since our money scheme is currently in the shop being repaired, it&#8217;s probably premature to think about the security of the much more complicated copy-protection scheme! But these are wonderful open problems, and I encourage any of you to come and scoop us. Once we know whether uncopyable quantum software is possible at all, we could then debate whether it&#8217;s the &#8220;reason&#8221; for our universe to have unclonability as a core principle.</p>
<hr />
<p><b>Unclonable Proofs and Advice</b></p>
<p>Along the same lines, I can&#8217;t resist mentioning some favorite research directions, which some enterprising student here could totally turn into a talk at next year&#8217;s QCRYPT.</p>
<p>Firstly, what can we say about clonable versus unclonable quantum <i>proofs</i>&#8212;that is, QMA witness states? In other words: for which problems in <a href="https://en.wikipedia.org/wiki/QMA">QMA</a> can we ensure that there&#8217;s an accepting witness that lets you efficiently create as many additional accepting witnesses as you want? (I mean, besides the QCMA problems, the ones that have short classical witnesses?) For which problems in QMA can we ensure that there&#8217;s an accepting witness that <i>doesn&#8217;t</i> let you efficiently create any additional accepting witnesses? I do have a few observations about these questions&#8212;ask me if you&#8217;re interested&#8212;but on the whole, I believe almost anything one can ask about them remains open.</p>
<p>Admittedly, it&#8217;s not clear how much <i>use</i> an unclonable proof would be. Like, imagine a quantum state that encoded a proof of the Riemann Hypothesis, and which you would keep in your bedroom, in a glass orb on your nightstand or something. And whenever you felt your doubts about the Riemann Hypothesis resurfacing, you&#8217;d take the state out of its orb and measure it again to reassure yourself of RH&#8217;s truth. You&#8217;d be like, <i>&#8220;my preciousssss!&#8221;</i> And no one else could copy your state and thereby gain the same Riemann-faith-restoring powers that you had. I dunno, I probably won&#8217;t hawk this application in a DARPA grant.</p>
<p>Similarly, one can ask about clonable versus unclonable <i>quantum advice states</i>&#8212;that is, initial states that are given to you to boost your computational power beyond that of an ordinary quantum computer. And that&#8217;s also a fascinating open problem.</p>
<p>OK, but maybe none of this quite gets at why our universe has unclonability. And this is an after-dinner talk, so do you want me to get to the <i>really</i> crazy stuff? Yes?</p>
<hr />
<p><b>Self-Referential Paradoxes</b></p>
<p>OK! What if unclonability is our universe&#8217;s way around the paradoxes of self-reference, like the unsolvability of the halting problem and Gödel&#8217;s Incompleteness Theorem? Allow me to explain what I mean.</p>
<p>In kindergarten or wherever, we all learn Turing&#8217;s proof that there&#8217;s no computer program to solve the halting problem. But what isn&#8217;t usually stressed is that that proof actually does more than advertised. If someone hands you a program that they claim solves the halting problem, Turing doesn&#8217;t merely tell you that that person is wrong&#8212;rather, he shows you exactly <i>how</i> to expose the person as a jackass, by constructing an example input on which their program fails. All you do is, you take their claimed halt-decider, modify it in some simple way, and then feed the result back to the halt-decider as input. You thereby create a situation where, if your program halts given its own code as input, then it must run forever, and if it runs forever then it halts. &#8220;WHOOOOSH!&#8221; [head-exploding gesture]</p>
<p>OK, but now imagine that the program someone hands you, which they claim solves the halting problem, is a <i>quantum</i> program. That is, it&#8217;s a quantum state, which you measure in some basis depending on the program you&#8217;re interested in, in order to decide whether that program halts. Well, the truth is, this quantum program <i>still</i> can&#8217;t work to solve the halting problem. After all, there&#8217;s some classical program that simulates the quantum one, albeit less efficiently, and we already know that the classical program can&#8217;t work.</p>
<p>But now consider the question: how would you actually produce an example input on which this quantum program failed to solve the halting problem? Like, suppose the program worked on every input you tried. Then ultimately, to produce a counterexample, you might need to follow Turing&#8217;s proof and make a copy of the claimed quantum halt-decider. But then, of course, you&#8217;d run up against the No-Cloning Theorem!</p>
<p>So we seem to arrive at the conclusion that, while of course there&#8217;s no quantum program to solve the halting problem, there <i>might</i> be a quantum program for which no one could explicitly <i>refute</i> that it solved the halting problem, by giving a counterexample.</p>
<p>I was pretty excited about this observation for a day or two, until I noticed the following. Let&#8217;s suppose your quantum program that allegedly solves the halting problem has n qubits. Then it&#8217;s possible to prove that the program can&#8217;t possibly be used to compute more than, say, 2n bits of Chaitin&#8217;s constant Ω, which is the probability that a random program halts. OK, but if we had an actual oracle for the halting problem, we could use it to compute as many bits of Ω as we wanted. So, suppose I treated my quantum program <i>as if</i> it were an oracle for the halting problem, and I used it to compute the first 2n bits of Ω. Then I would <i>know</i> that, assuming the truth of quantum mechanics, the program must have made a mistake somewhere. There would still be something weird, which is that I wouldn&#8217;t know on which input my program had made an error&#8212;I would just know that it must&#8217;ve erred somewhere! With a bit of cleverness, one can narrow things down to two inputs, such that the quantum halt-decider must have erred on at least one of them. But I don&#8217;t know whether it&#8217;s possible to go further, and concentrate the wrongness on a single query.</p>
<p>We can play a similar game with other famous applications of self-reference. For example, suppose we use a quantum state to encode a system of axioms. Then that system of axioms will still be subject to Gödel&#8217;s Incompleteness Theorem (which I guess I believe despite the umlaut). If it&#8217;s consistent, it won&#8217;t be able to prove all the true statements of arithmetic. But we might never be able to produce an explicit example of a true statement that the axioms don&#8217;t prove. To do so we&#8217;d have to clone the state encoding the axioms and thereby violate No-Cloning.</p>
<hr />
<p><b>Personal Identity</b></p>
<p>But since I&#8217;m a bit drunk, I should confess that all this stuff about Gödel and self-reference is just a warmup to what I <i>really</i> wanted to talk about, which is whether the No-Cloning Theorem might have anything to do with the mysteries of personal identity and &#8220;free will.&#8221; I first encountered this idea in Roger Penrose&#8217;s book, <a href="https://www.amazon.com/Emperors-New-Mind-Concerning-Computers/dp/0192861980"><i>The Emperor&#8217;s New Mind</i></a>. But I want to stress that I&#8217;m not talking here about the possibility that the brain is a quantum computer&#8212;much less about the possibility that it&#8217;s a quantum-gravitational hypercomputer that uses microtubules to solve the halting problem! I might be drunk, but I&#8217;m not <i>that</i> drunk. I also think that the Penrose-Lucas argument, based on Gödel&#8217;s Theorem, for why the brain has to work that way is fundamentally flawed.</p>
<p>But here I&#8217;m talking about something different. See, I have a lot of friends in the Singularity / Friendly AI movement. And I talk to them whenever I pass through the Bay Area, which is where they congregate. And many of them express great confidence that before too long&#8212;maybe in 20 or 30 years, maybe in 100 years&#8212;we&#8217;ll be able to upload ourselves to computers and live forever on the Internet (as opposed to just living 70% of our lives on the Internet, like we do today).</p>
<p>This would have lots of advantages. For example, any time you were about to do something dangerous, you&#8217;d just make a backup copy of yourself first. If you were struggling with a conference deadline, you&#8217;d spawn 100 temporary copies of yourself. If you wanted to visit Mars or Jupiter, you&#8217;d just email yourself there. If Trump became president, you&#8217;d not run yourself for 8 years (or maybe 80 or 800 years). And so on.</p>
<p>Admittedly, some awkward questions arise. For example, let&#8217;s say the hardware runs three copies of your code and takes a majority vote, just for error-correcting purposes. Does that bring three copies of you into existence, or only one copy? Or let&#8217;s say your code is run homomorphically encrypted, with the only decryption key stored in another galaxy. Does that count? Or you email yourself to Mars. If you want to make sure that you&#8217;ll wake up on Mars, is it important that you delete the copy of your code that remains on earth? Does it matter whether anyone runs the code or not? And what exactly counts as &#8220;running&#8221; it? Or my favorite one: could someone threaten you by saying, &#8220;look, I have a copy of <i>your</i> code, and if you don&#8217;t do what I say, I&#8217;m going to make a thousand copies of it and subject them all to horrible tortures?&#8221;</p>
<p>The issue, in all these cases, is that in a world where there could be millions of copies of your code running on different substrates in different locations&#8212;or things where it&#8217;s not even clear whether they <i>count</i> as a copy or not&#8212;we don&#8217;t have a principled way to take as input a description of the state of the universe, and then identify where in the universe <i>you</i> are&#8212;or even a probability distribution over places where you could be. And yet you seem to need such a way in order to make predictions and decisions.</p>
<p>A few years ago, I wrote this gigantic, post-tenure essay called <a href="http://www.scottaaronson.com/papers/giqtm3.pdf">The Ghost in the Quantum Turing Machine</a>, where I tried to make the point that we don&#8217;t know at what level of granularity a brain would need to be simulated in order to duplicate someone&#8217;s subjective identity. Maybe you&#8217;d only need to go down to the level of neurons and synapses. But <i>if</i> you needed to go all the way down to the molecular level, then the No-Cloning Theorem would immediately throw a wrench into most of the paradoxes of personal identity that we discussed earlier.</p>
<p>For it would mean that there were some microscopic yet essential details about each of us that were fundamentally uncopyable, localized to a particular part of space. We would all, in effect, be quantumly copy-protected software. Each of us would have a core of unpredictability&#8212;not merely probabilistic unpredictability, like that of a quantum random number generator, but genuine unpredictability&#8212;that an external model of us would fail to capture completely. Of course, by having futuristic nanorobots scan our brains and so forth, it would be possible in principle to make extremely realistic copies of us. But those copies necessarily wouldn&#8217;t capture quite everything. And, one can speculate, maybe not enough for your subjective experience to &#8220;transfer over.&#8221;</p>
<p>Maybe the most striking aspect of this picture is that sure, you could teleport yourself to Mars&#8212;but to do so you&#8217;d need to use quantum teleportation, and as we all know, quantum teleportation necessarily destroys the original copy of the teleported state. So we&#8217;d avert this metaphysical crisis about what to do with the copy that remained on Earth.</p>
<p>Look&#8212;I don&#8217;t know if any of you are like me, and have ever gotten depressed by reflecting that all of your life experiences, all your joys and sorrows and loves and losses, every itch and flick of your finger, could in principle be encoded by a huge but finite string of bits, and therefore by a single positive integer. (Really? No one else gets depressed about that?) It&#8217;s kind of like: given that this integer has existed since before there was a universe, and will continue to exist after the universe has degenerated into a thin gruel of radiation, what&#8217;s the point of even going through the motions? You know?</p>
<p>But the No-Cloning Theorem raises the possibility that at least this integer is really <i>your</i> integer. At least it&#8217;s something that no one else knows, and no one else could know in principle, even with futuristic brain-scanning technology: you&#8217;ll always be able to surprise the world with a new digit. I don&#8217;t know if that&#8217;s true or not, but if it <i>were</i> true, then it seems like the sort of thing that would be worthy of elevating unclonability to a fundamental principle of the universe.</p>
<p>So as you enjoy your dinner and dessert at this historic Mayflower Hotel, I ask you to reflect on the following. People can photograph this event, they can video it, they can type up transcripts, in principle they could even record everything that happens down to the millimeter level, and post it on the Internet for posterity. But they&#8217;re not gonna get the quantum states. There&#8217;s <i>something</i> about this evening, like about every evening, that will vanish forever, so please savor it while it lasts. Thank you.</p>
<hr />
<p><span style="color: red;"><b>Update (Sep. 20):</b></span> Unbeknownst to me, Marc Kaplan <i>did</i> video the event and put it up on YouTube! <a href="https://www.youtube.com/watch?v=kXerI-tnW50">Click here to watch.</a> Thanks very much to Marc! I hope you enjoy, even though of course, the video can&#8217;t precisely clone the experience of having been there.</p>
<p>[<i>Note:</i> The part where I raise my middle finger is an inside joke&#8212;one of the speakers during the technical sessions inadvertently did the same while making a point, causing great mirth in the audience.]</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2903</wfw:commentRss>
		<slash:comments>72</slash:comments>
		</item>
		<item>
		<title>The Ninth Circuit ruled that vote-swapping is legal.  Let&#8217;s use it to stop Trump.</title>
		<link>http://www.scottaaronson.com/blog/?p=2891</link>
		<comments>http://www.scottaaronson.com/blog/?p=2891#comments</comments>
		<pubDate>Sat, 10 Sep 2016 19:46:38 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Nerd Interest]]></category>
		<category><![CDATA[The Fate of Humanity]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2891</guid>
		<description><![CDATA[Updates: Commenter JT informs me that there&#8217;s already a vote-swapping site available: MakeMineCount.org.  (I particularly like their motto: &#8220;Everybody wins.  Except Trump.&#8221;)  I still think there&#8217;s a need for more sites, particularly ones that would interface with Facebook, but this is a great beginning.  I&#8217;ve signed up for it myself. Also, Toby Ord, a philosopher [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><span style="color: #ff0000;"><strong>Updates:</strong></span> Commenter JT informs me that there&#8217;s already a vote-swapping site available: <a href="https://www.makeminecount.org/">MakeMineCount.org</a>.  (I particularly like their motto: &#8220;Everybody wins.  Except Trump.&#8221;)  I still think there&#8217;s a need for more sites, particularly ones that would interface with Facebook, but this is a great beginning.  I&#8217;ve signed up for it myself.</p>
<p>Also, Toby Ord, a philosopher I know at Oxford, points me to a neat <a href="http://www.amirrorclear.net/files/moral-trade.pdf">academic paper</a> he wrote that analyzes vote-swapping as an example of &#8220;moral trade,&#8221; and that mentions the <em>Porter v. Bowen</em> decision holding vote-swapping to be legal in the US.</p>
<p>Also, if we find two Gary Johnson supporters in swing states willing to trade, I&#8217;ve been contacted by a fellow Austinite who&#8217;d be happy to accept the second trade.</p>
<hr />
<p>As regular readers might know, my first appearance in the public eye (for a loose definition of &#8220;public eye&#8221;) had nothing to do with D-Wave, Gödel&#8217;s Theorem, the computational complexity of quantum gravity, Australian printer ads, or&#8212;god forbid&#8212;social justice shaming campaigns.  Instead it centered on <a href="https://en.wikipedia.org/wiki/Vote_pairing">NaderTrading</a>: the valiant but doomed effort, in the weeks leading up to the 2000 US Presidential election, to stop George W. Bush&#8217;s rise to power by encouraging Ralph Nader supporters in swing states (such as Florida) to vote for Al Gore, while pairing themselves off over the Internet with Gore supporters in safe states (such as Texas or California) who would vote for Nader on their behalf.  That way, Nader&#8217;s vote share (and his chance of reaching 5% of the popular vote, which would&#8217;ve qualified him for federal funds in 2004) wouldn&#8217;t be jeopardized, but neither would Gore&#8217;s chance of winning the election.</p>
<p>Here&#8217;s what I thought at the time:</p>
<ol>
<li>The election would be razor-close (though I never could&#8217;ve guessed <em>how</em> close).</li>
<li>Bush was a malignant doofus who would be a disaster for the US and the world (though I certainly didn&#8217;t know how&#8212;recall that, at the time, Bush was running as an <em>isolationist</em>).</li>
<li>Many Nader supporters, including the ones who I met at Berkeley, prioritized personal virtue so completely over real-world consequences that they might actually throw the election to Bush.</li>
</ol>
<p>NaderTrading, as proposed by law professor Jamin Raskin and others, seemed like one of the clearest ways for nerds who knew these points, but who lacked political skills, to throw themselves onto the gears of history and do something good for the world.</p>
<p>So, as a 19-year-old grad student, I created a website called <a href="http://web.archive.org/web/20060212111358/http://www.cs.berkeley.edu/~aaronson/nadertrader2.html">&#8220;In Defense of NaderTrading&#8221;</a> (archived version), which didn&#8217;t arrange vote swaps themselves&#8212;other sites did that&#8212;but which explored some of the game theory behind the concept and answered some common objections to it.  (<a href="http://www.scottaaronson.com/blog/?p=278">See also here.</a>)  Within days of creating the site, I&#8217;d somehow become an &#8220;expert&#8221; on the topic, and was fielding hundreds of emails as well as requests for print, radio, and TV interviews.</p>
<p>Alas, the one question everyone wanted to ask me was the one that I, as a CS nerd, was the least qualified to answer: <em>is NaderTrading legal? isn&#8217;t it kind of like &#8230; buying and selling votes?</em></p>
<p>I could only reply that, to my mind, NaderTrading obviously <em>ought</em> to be legal, because:</p>
<ol>
<li>Members of Congress and state legislatures trade votes all the time.</li>
<li>A private agreement between two friends to each vote for the other&#8217;s preferred candidate seems self-evidently legal, so why should it be any different if a website is involved?</li>
<li>The whole point of NaderTrading is to exercise your voting power more fully&#8212;pretty much the <em>opposite</em> of bartering it away for private gain.</li>
<li>While the election laws vary by state, the ones I read very specifically banned trading votes for <em>tangible goods</em>&#8212;they never even mentioned trading votes for other votes, even though they easily could&#8217;ve done so had legislators intended to ban that.</li>
</ol>
<p>But&#8212;and here was the fatal problem&#8212;I could only address principles and arguments, rather than politics and power.  I couldn&#8217;t honestly assure the people who wanted to vote-swap, or to set up vote-swapping sites, that they wouldn&#8217;t be prosecuted for it.</p>
<p>As it happened, the main vote-swapping site, voteswap2000.com, was <a href="https://www.aclu.org/news/aclu-disappointed-court-decision-regarding-ca-shutdown-voteswap-2000">shut down</a> by California&#8217;s Republican attorney general, Bill Jones, only four days after it opened.  A second vote-swapping site, votexchange.com, was never directly threatened but also ceased operations because of what happened to voteswap2000.  Many legal scholars felt confident that these shutdowns wouldn&#8217;t hold up in court, but with just a few weeks until the election, there was no time to fight it.</p>
<p>Before it was shut down, voteswap2000 had brokered 5,041 vote-swaps, including hundreds in Florida.  Had that and similar sites been allowed to continue operating, it&#8217;s entirely plausible that they would&#8217;ve changed the outcome of the election.  No Iraq war, no 2008 financial meltdown: we would&#8217;ve been living in a different world.  Note that, of the 100,000 Floridians who ultimately voted for Nader, we would&#8217;ve needed to convince fewer than 1% of them.</p>
<hr />
<p>Today, we face something I didn&#8217;t expect to face in my lifetime: namely, a serious prospect of a takeover of the United States by a nativist demagogue with open contempt for democratic norms and legendarily poor impulse control. Meanwhile, there are two third-party candidates&#8212;Gary Johnson and Jill Stein&#8212;who together command 10% of the vote.  A couple months ago, I&#8217;d <a href="http://www.scottaaronson.com/blog/?p=2777">expressed hopes</a> that Johnson might help Hillary, by splitting the Republican vote. But it now looks clear that, on balance, not only Stein but also Johnson are helping Trump, by splitting up that part of the American vote that&#8217;s not driven by racial resentment.</p>
<p>So recently a friend&#8212;the philanthropist and rationalist <a href="https://en.wikipedia.org/wiki/Holden_Karnofsky">Holden Karnofsky</a>&#8212;posed a question to me: should we revive the vote-swapping idea from 2000? And presumably this time around, enhance the idea with 21<sup>st</sup>-century bells and whistles like mobile apps and Facebook, to make it all the easier for Johnson/Stein supporters in swing states and Hillary supporters in safe states to find each other and trade votes?</p>
<p>Just like so many well-meaning people back in 2000, Holden was worried about one thing: is vote-swapping against the law? If someone created a mobile vote-swapping app, could that person be thrown in jail?</p>
<hr />
<p>At first, I had no idea: I assumed that vote-swapping simply remained in the legal Twilight Zone where it was last spotted in 2000.  But then I did something radical: <em>I looked it up</em>.  And when I did, I discovered a decade-old piece of news that changes everything.</p>
<p>On August 6, 2007, the <a href="https://en.wikipedia.org/wiki/United_States_Court_of_Appeals_for_the_Ninth_Circuit">Ninth Circuit Court of Appeals</a> finally ruled on a case, <em>Porter v. Bowen</em>, stemming from the California attorney general&#8217;s shutdown of voteswap2000.com.  Their ruling, <a href="http://cdn.ca9.uscourts.gov/datastore/opinions/2007/08/06/0655517.pdf">which is worth reading in full</a>, was unequivocal.</p>
<p>Vote-swapping, it said, is protected by the First Amendment, which state election laws can&#8217;t supersede.  It is fundamentally different from buying or selling votes.</p>
<p>Yes, the decision also granted the California attorney general immunity from prosecution, on the ground that vote-swapping&#8217;s legality hadn&#8217;t yet been established in 2000&#8212;indeed it wouldn&#8217;t be, until the Ninth Circuit&#8217;s decision itself!  Nevertheless, the ruling made clear that the appellants (the creators of voteswap2000 and some others) were granted the relief they sought: namely, an assurance that vote-swapping websites would be protected from state interference in the future.</p>
<p>Admittedly, if vote-swapping takes off again, it&#8217;s possible that the question will be re-litigated and will end up in the Supreme Court, where the Ninth Circuit&#8217;s ruling could be reversed.  For now, though, let the message be shouted from the rooftops: <strong>a court has ruled. You cannot be punished for cooperating with your fellow citizens to vote strategically, or for helping others do the same.</strong></p>
<hr />
<p>For those of you who oppose Donald Trump and who are good at web and app development: with just two months until the election, I think the time to set up some serious vote-swapping infrastructure is <span style="color: #ff0000;"><strong>right now</strong></span>.  Let your name be etched in history, alongside those who stood up to all the vicious demagogues of the past.  And let that happen without your even needing to get up from your computer chair.</p>
<hr />
<p>I&#8217;m not, I confess, a huge fan of either Gary Johnson <em>or</em> Jill Stein (especially not Stein).  Nevertheless, here&#8217;s my promise: on November 8, I will cast my vote in the State of Texas for Gary Johnson, <em>if</em> I can find at least one Johnson supporter who lives in a swing state, who I feel I can trust, and who agrees to vote for Hillary Clinton on my behalf.</p>
<p>If you think you&#8217;ve got what it takes to be my vote-mate, send me an email, tell me about yourself, and let&#8217;s talk!  I&#8217;m not averse to some electoral polyamory&#8212;i.e., <em>lots</em> of Johnson supporters in swing states casting their votes for Clinton, in exchange for the world&#8217;s most famous quantum complexity blogger voting for Johnson&#8212;but I&#8217;m willing to settle for a monogamous relationship if need be.</p>
<p>And as for Stein? I&#8217;d probably rather subsist on tofu than vote for her, because of her support for seemingly every pseudoscience she comes across, and especially because of her endorsement of the vile campaign to boycott Israel.  Even so: if Stein supporters in swing states whose sincerity I trusted offered to trade votes with me, and Johnson supporters didn&#8217;t, I would bury my scruples and vote for Stein.  Right now, the need to stop the madman takes precedence over everything else.</p>
<hr />
<p>One last thing to get out of the way.  When they learn of my history with NaderTrading, people keep pointing me a website called <a href="http://balancedrebellion.com/">BalancedRebellion.com</a>, and exclaiming &#8220;look! isn&#8217;t this <em>exactly</em> that vote-trading thing you were talking about?&#8221;</p>
<p>On examination, Balanced Rebellion turns out to be the following proposal:</p>
<ol>
<li>A Trump supporter in a swing state pairs off with a Hillary supporter in a swing state.</li>
<li>Both of them vote for Gary Johnson, thereby helping Johnson without giving an advantage to either Hillary or Trump.</li>
</ol>
<p>So, exercise for the reader: see if you can spot the difference between this idea and the kind of vote-swapping <em>I&#8217;m</em> talking about.  (Here&#8217;s a hint: my version helps <em>prevent</em> a racist lunatic from taking command of the most powerful military on earth, rather than being neutral about that outcome.)</p>
<p>Not surprisingly, the &#8220;balanced rebellion&#8221; is advocated by Johnson fans.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2891</wfw:commentRss>
		<slash:comments>183</slash:comments>
		</item>
		<item>
		<title>Shtetl-Optimized Open Thread</title>
		<link>http://www.scottaaronson.com/blog/?p=2887</link>
		<comments>http://www.scottaaronson.com/blog/?p=2887#comments</comments>
		<pubDate>Fri, 02 Sep 2016 18:48:18 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Nerd Interest]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2887</guid>
		<description><![CDATA[Sorry for a post-free month.  I was completely preoccupied with the logistics of the move to Texas.  But now that I&#8217;m finally more-or-less settled on my 1000-acre cattle ranch, with my supply of shotguns and whiskey, I&#8217;ve decided to ease myself gently back into blogging, via Shtetl-Optimized&#8216;s first-ever SlateStarCodex-style &#8220;Open Thread.&#8221;  This is not an [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sorry for a post-free month.  I was completely preoccupied with the logistics of the move to Texas.  But now that I&#8217;m finally more-or-less settled on my 1000-acre cattle ranch, with my supply of shotguns and whiskey, I&#8217;ve decided to ease myself gently back into blogging, via <em>Shtetl-Optimized</em>&#8216;s first-ever <a href="http://slatestarcodex.com/">SlateStarCodex</a>-style &#8220;Open Thread.&#8221;  This is <em>not</em> an Ask Me Anything thread.  Rather, it&#8217;s a thread for you, the readers, to ask each other whatever you want or bring up any topic on your mind.  I&#8217;ll chime in occasionally, and will moderate if needed.  No personal attacks or local hidden variable theories, please.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2887</wfw:commentRss>
		<slash:comments>202</slash:comments>
		</item>
		<item>
		<title>More Wrong Things I Said in Papers</title>
		<link>http://www.scottaaronson.com/blog/?p=2854</link>
		<comments>http://www.scottaaronson.com/blog/?p=2854#comments</comments>
		<pubDate>Fri, 29 Jul 2016 21:49:31 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Complexity]]></category>
		<category><![CDATA[Embarrassing Myself]]></category>
		<category><![CDATA[Quantum]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2854</guid>
		<description><![CDATA[Two years ago, I wrote a blog post entitled PostBQP Postscripts, owning up to not one but four substantive mathematical errors that I&#8217;d made over the years in my published papers, and which my students and colleagues later brought to my sheepish attention.  Fortunately, none of these errors affected the papers&#8217; main messages; they just [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Two years ago, I wrote a blog post entitled <a href="http://www.scottaaronson.com/blog/?p=2072">PostBQP Postscripts</a>, owning up to not one but <em>four</em> substantive mathematical errors that I&#8217;d made over the years in my published papers, and which my students and colleagues later brought to my sheepish attention.  Fortunately, none of these errors affected the papers&#8217; main messages; they just added interesting new twists to the story.  Even so, I remember feeling at the time like undergoing this public repentance was soul-cleansing intellectual hygiene.  I also felt like writing one big &#8220;post of shame&#8221; was <em>easier</em> than writing a bunch of separate errata and submitting them to journals, while also reaching a wider audience (and, therefore, doing an even better soul-cleansing job).</p>
<p>So I resolved that, anytime I&#8217;d saved up enough errata, I&#8217;d do another sackcloth-and-ashes post.  Which brings us to today.  Without further ado:</p>
<hr />
<p><strong>I. Quantum Money Falling Down</strong></p>
<p>My and Paul Christiano&#8217;s <a href="http://theoryofcomputing.org/articles/v009a009/v009a009.pdf">explicit public-key quantum money scheme</a>&#8212;the one based on low-degree polynomials&#8212;has now been fully broken.  To clarify, our abstract hidden-subspace scheme&#8212;the one that uses a classical black-box to test membership in the subspaces&#8212;remains totally fine.  Indeed, we unconditionally proved the security of the black-box scheme, and our security proof stands.  In the paper, though, we also stuck our necks out further, and conjectured that you could instantiate the black box, by publishing random low-degree polynomials that vanish on the subspaces you want to hide.  While I considered this superfluous, at Paul&#8217;s insistence, we also recommended adding completely-random &#8220;noise polynomials&#8221; for extra security.</p>
<p>Our scheme was broken in two stages.  First, in 2014, <a href="https://hal.inria.fr/hal-01098223/document">Pena et al.</a> broke the noiseless version of our scheme, using Gröbner-basis methods, over fields of characteristic greater than 2.  Over F<sub>2</sub>&#8212;the field we happened to use in our scheme&#8212;Pena et al. couldn&#8217;t quite prove that their attack worked, but they gave numerical evidence that at least it finds the subspaces in n<sup>O(log n)</sup> time.  Note that nothing in Pena et al.&#8217;s attack is specific to quantum money: indeed, their attack consists of a purely classical algorithm, which efficiently solves the general classical problem of recovering large subspaces from polynomials that hide them.</p>
<p>At that point, at least the <em>noisy</em> version of our scheme&#8212;the one Paul had insisted we include&#8212;was still standing!  Indeed, the Gröbner-basis attack seemed to break down entirely when some of the polynomials were random garbage.</p>
<p>Later, though, Paul and Or Sattath realized that a quantum trick&#8212;basically, the <a href="http://arxiv.org/abs/0912.3823">single-copy tomography</a> of Farhi et al.&#8212;can identify which polynomials are the noisy ones, provided we&#8217;re given a legitimate quantum money state to start with.  As a consequence, the problem of breaking the noisy scheme can be reduced to the problem of breaking the noiseless scheme&#8212;i.e., the problem that Pena et al. already essentially solved.</p>
<p>As bad as this sounds, it has an interesting positive consequence.  In our paper, Paul and I had actually given a security reduction for our money scheme based on low-degree polynomials.  In particular, we showed that there&#8217;s no polynomial-time quantum algorithm to counterfeit our money states, <i>unless</i> there&#8217;s a polynomial-time quantum algorithm that finds a basis for a subspace S≤F<sub>2</sub><sup>n</sup> of dimension n/2 with Ω(2<sup>-n/2</sup>) success probability, given a collection of low-degree polynomials p<sub>1</sub>,&#8230;,p<sub>m</sub> and q<sub>1</sub>,&#8230;,q<sub>m</sub> (m=O(n)) most of which vanish on S and its dual subspace respectively, but that are otherwise random.  So, running our reduction backwards, the only possible conclusion from the break is that there <em>is</em> such a quantum algorithm!  Yet we would&#8217;ve had no idea how to find that quantum algorithm without going through quantum money&#8212;nor do we know a classical algorithm for the problem, or even a quantum algorithm with Ω(1) success probability.</p>
<p>In the meantime, the problem of designing a public-key quantum money scheme, with good cryptographic evidence for its security, remains open.  It&#8217;s plausible that there&#8217;s some other, more secure way to instantiate my and Paul&#8217;s hidden subspace scheme, for example using lattices.  And even before we&#8217;ve found such a way, we can use <a href="http://news.mit.edu/2015/secure-foundation-any-cryptographic-system-1028">indistinguishability obfuscation</a> as a stopgap.  We could also seek cryptographic evidence for the security of other kinds of public-key quantum money, like <a href="https://arxiv.org/abs/1004.5127">Farhi et al.&#8217;s</a> based on knot invariants.</p>
<p>A paper about all this is on our to-do stack. In the meantime, for further details, see Lecture 9 in my <a href="http://www.scottaaronson.com/barbados-2016.pdf">Barbados lecture notes</a>.</p>
<hr />
<p><strong>II. A De-Merlinization Mistake</strong></p>
<p>In my 2006 paper <a href="http://www.scottaaronson.com/papers/qmaqpoly.pdf">QMA/qpoly ⊆ PSPACE/poly: De-Merlinizing Quantum Protocols</a>, the technical core of the complexity result was a new quantum information lemma that I called the &#8220;Quantum OR Bound&#8221; (Lemma 14 in the paper).</p>
<p>Basically, the Quantum OR Bound says that, if we have an unknown quantum state ρ, as well as a collection of measurements M<sub>1</sub>,&#8230;,M<sub>n</sub> that we might want to make on ρ, then we can distinguish the case that (a) every M<sub>i</sub> rejects ρ with overwhelming probability, from the case that (b) at least one M<sub>i</sub> accepts ρ with high probability.  And we can do this <em>despite</em> having only one copy of ρ, and despite the fact that earlier measurements might corrupt ρ, thereby compromising the later measurements.  The intuition is simply that, if the earlier measurements corrupted ρ substantially, that could only be because some of them had a decent probability of accepting ρ, meaning that at any rate, we&#8217;re not in case (a).</p>
<p>I&#8217;ve since reused the Quantum OR Bound for other problems&#8212;most notably, a proof that private-key quantum money requires either a computational assumption or a huge database maintained by the bank (see Theorem 8.3.1 in my <a href="http://www.scottaaronson.com/barbados-2016.pdf">Barbados lecture notes</a>).</p>
<p>Alas, Aram Harrow and Ashley Montanaro <a href="https://arxiv.org/abs/1607.03236">recently discovered</a> that my proof of the Quantum OR Bound is wrong.  It&#8217;s wrong because I neglected the possibility of &#8220;<a href="https://en.wikipedia.org/wiki/Quantum_Zeno_effect">Zeno-like</a> behavior,&#8221; in which repeated measurements on a quantum state would gradually shift the state far away from its starting point, without ever having a significant probability of rejecting the state.  For some reason, I assumed without any adequate argument that choosing the measurements at random, rather than in a predetermined order, would solve that problem.</p>
<p>Now, I might actually be <em>right</em> that randomizing the measurements is enough to solve the Zeno problem!  That remains a plausible conjecture, which Harrow and Montanaro could neither confirm nor refute.  In the meantime, though, Harrow and Montanaro were able to recover my QMA/qpoly⊆PSPACE/poly theorem, and all the other conclusions known to follow from the Quantum OR Bound (including some new ones that they discover), by designing a <em>new</em> measurement procedure whose soundness they can prove.</p>
<p>Their new procedure is based on an elegant, obvious-in-retrospect idea that somehow never occurred to me.  Namely, instead of just applying M<sub>i</sub>&#8216;s to ρ, one can first put a control qubit into an equal superposition of the |0〉 and |1〉 states, and then apply M<sub>i</sub>&#8216;s <em>conditioned</em> on the control qubit being in the |1〉 state.  While doing this, one can periodically measure the control qubit in the {|+〉,|-〉} basis, in order to check directly whether applying the M<sub>i</sub>&#8216;s has substantially corrupted ρ.  (If it hasn&#8217;t, one will always get the outcome |+〉; if it has, one might get |-〉.)  Substantial corruption, if detected, then tells us that some M<sub>i</sub>&#8216;s must have had non-negligible probabilities of accepting ρ.</p>
<hr />
<p><strong>III. Almost As Good As True</strong></p>
<p>One lemma that I&#8217;ve used even <em>more</em> than the Quantum OR Bound is what I&#8217;ve called the &#8220;Almost As Good As New Lemma,&#8221; and what others in the field have called the &#8220;Gentle Measurement Lemma.&#8221;</p>
<p>I claimed a proof of the AAGANL in my 2004 paper <a href="http://theoryofcomputing.org/articles/v001a001/v001a001.pdf">Limitations of Quantum Advice and One-Way Communication</a> (Lemma 2.2 there), and have used the lemma in like half a dozen later papers.  Alas, when I lectured at Barbados, Sasha Razborov and others discovered that my proof of the AAGANL was missing a crucial step!  More concretely, the proof I gave there works for pure states but not for mixed states.  For mixed states, the trouble is that I take a purification of the mixed state&#8212;something that always exists mathematically&#8212;but then illegally assume that the measurement I&#8217;m analyzing acts on the particular purification I&#8217;ve conjured up.</p>
<p>Fortunately, one can easily fix this problem by decomposing the state ρ into a mixture of pure states, then applying my earlier argument to each pure state separately, and finally using Cauchy-Schwarz (or just the convexity of the square-root function) to recombine the results.  Moreover, this is exactly what other people&#8217;s proofs of the Gentle Measurement Lemma <em>did </em>do, though I&#8217;d never noticed it before Barbados&#8212;I just idly wondered why those other proofs took twice as long as mine to do the same work!  For a correct proof, see Lemma 1.3.1 in the <a href="http://www.scottaaronson.com/barbados-2016.pdf">Barbados lecture notes</a>.</p>
<hr />
<p><strong>IV. Oracle Woes</strong></p>
<p>In my 2010 paper <a href="http://www.scottaaronson.com/papers/bqpph.pdf">BQP and the Polynomial Hierarchy</a>, I claimed to construct oracles A relative to which BQP⊄BPP<sub>path</sub> and BQP⊄SZK, even while making only partial progress toward the big prize, which would&#8217;ve been an oracle relative to which BQP⊄PH.  Not only that: I claimed to show that <em>any</em> problem with a property called &#8220;almost k-wise independence&#8221;&#8212;one example being the Forrelation (or Fourier Checking) problem that I introduced in that paper&#8212;was neither in BPP<sub>path</sub> nor in SZK.  But I showed that Forrelation <em>is</em> in BQP, thus yielding the separations.</p>
<p>Alas, this past spring Lijie Chen, who was my superb visiting student from Tsinghua University, realized that my proofs of these particular separations were wrong.  Not only that, they were wrong <em>because I implicitly substituted a ratio of expectations for an expectation of ratios</em> (!).  Again, it might still be <em>true</em> that almost k-wise independent problems can be neither in BPP<sub>path</sub> nor in SZK: that remains an interesting conjecture, which Lijie was unable to resolve one way or the other.  (On the other hand, I showed <a href="http://www.scottaaronson.com/papers/glnfalse.pdf">here</a> that almost k-wise independent problems <em>can</em> be in PH.)</p>
<p>But never fear!  In a <a href="http://arxiv.org/abs/1605.00619">recent arXiv preprint</a>, Lijie has supplied correct proofs for the BQP⊄BPP<sub>path</sub> and BQP⊄SZK oracle separations&#8212;using the same Forrelation problem that I studied, but additional properties of Forrelation besides its almost k-wise independence.  Lijie notes that my proofs, had they worked, would also have yielded an oracle relative to which BQP⊄AM, which would&#8217;ve been a spectacular result, nontrivial progress toward BQP⊄PH.  His proofs, by contrast, apply only to worst-case decision problems rather than problems of distinguishing two probability distributions, and therefore don&#8217;t imply anything about BQP vs. AM.  Anyway, there&#8217;s other cool stuff in his paper too.</p>
<hr />
<p><strong>V. We Needed More Coffee</strong></p>
<p>This is one I&#8217;ve <a href="http://www.scottaaronson.com/blog/?p=1818">already written about</a> on this blog, but just in case anyone missed it &#8230; in my, Sean Carroll, and Lauren Ouellette&#8217;s original <a href="http://www.scottaaronson.com/papers/coffee2.pdf">draft paper on the coffee automaton</a>, the specific rule we discuss <em>doesn&#8217;t</em> generate any significant amount of complexity (in the sense of coarse-grained entropy).  We wrongly thought it did, because of a misinterpretation of our simulation data.  But as Brent Werness brought to our attention, not only does a corrected simulation not show any complexity bump, one can rigorously <em>prove</em> there&#8217;s no complexity bump.  And we could&#8217;ve realized all this from the beginning, by reflecting that pure random diffusion (e.g., what cream does in coffee when you don&#8217;t stir it with a spoon) <em>doesn&#8217;t</em> actually produce interesting tendril patterns.</p>
<p>On the other hand, Brent proposed a different rule&#8212;one that involves &#8220;shearing&#8221; whole regions of cream and coffee across each other&#8212;that <em>does</em> generate significant complexity, basically because of all the long-range correlations it induces.  And not only do we clearly see this in simulations, but the growth of complexity can be rigorously proven!  Anyway, we have a long-delayed revision of the paper that will explain all this in more detail, with Brent as well as MIT student Varun Mohan now added as coauthors.</p>
<hr />
<p>If any of my colleagues feel inspired to write up their own &#8220;litanies of mathematical error,&#8221; they&#8217;re welcome to do so in the comments!  Just remember: you don&#8217;t earn any epistemic virtue points unless the errors you reveal <em>actually</em> embarrass you.  No humblebragging about how you once left out a minus sign in your paper that won the Fields Medal.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2854</wfw:commentRss>
		<slash:comments>48</slash:comments>
		</item>
		<item>
		<title>My biology paper in Science (really)</title>
		<link>http://www.scottaaronson.com/blog/?p=2862</link>
		<comments>http://www.scottaaronson.com/blog/?p=2862#comments</comments>
		<pubDate>Fri, 22 Jul 2016 06:50:01 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Complexity]]></category>
		<category><![CDATA[Nerd Interest]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2862</guid>
		<description><![CDATA[Think I&#8217;m pranking you, right? You can see the paper right here (&#8220;Synthetic recombinase-based state machines in living cells,&#8221; by Nathaniel Roquet, Ava P. Soleimany, Alyssa C. Ferris, Scott Aaronson, and Timothy K. Lu).  [Update (Aug. 3): The previous link takes you to a paywall, but you can now access the full text of our paper here. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Think I&#8217;m pranking you, right?</p>
<p>You can <a href="http://science.sciencemag.org/content/353/6297/aad8559">see the paper right here</a> (&#8220;Synthetic recombinase-based state machines in living cells,&#8221; by Nathaniel Roquet, Ava P. Soleimany, Alyssa C. Ferris, Scott Aaronson, and Timothy K. Lu).  [<span style="color: #ff0000;"><strong>Update (Aug. 3):</strong></span> The previous link takes you to a paywall, but you can now <a href="http://science.sciencemag.org/content/353/6297/aad8559.full?ijkey=wzroPPh1eIu9k&amp;keytype=ref&amp;siteid=sci">access the full text of our paper here</a>.  See also the Supplementary Material <a href="http://science.sciencemag.org/content/suppl/2016/07/20/353.6297.aad8559.DC1">here</a>.]  You can also <a href="http://news.mit.edu/2016/biological-circuit-cells-remember-respond-stimuli-0721">read the <em>MIT News</em> article</a> (&#8220;Scientists program cells to remember and respond to series of stimuli&#8221;).  In any case, <em>my</em> little part of the paper will be fully explained in this post.</p>
<p>A little over a year ago, two MIT synthetic biologists&#8212;<a href="http://www.rle.mit.edu/sbg/people/">Timothy Lu</a> and his PhD student Nate Roquet&#8212;came to my office saying they had a problem they wanted help with.  <em>Why me?</em> I wondered.  Didn&#8217;t they realize I was a quantum complexity theorist, who so hated picking apart <a href="https://en.wikipedia.org/wiki/Pellet_(ornithology)">owl pellets</a> and memorizing the names of cell parts in junior-high Life Science, that he avoided taking a single biology course since that time?  (Not counting computational biology, taught in a CS department by Richard Karp.)</p>
<p>Nevertheless, I listened to my biologist guests&#8212;which turned out to be an excellent decision.</p>
<p>Tim and Nate told me about a DNA system with surprisingly clear rules, which led them to a strange but elegant combinatorial problem.  In this post, first I need to spend some time to tell you the rules; then I can tell you the problem, and lastly its solution.  There are no mathematical prerequisites for this post, and <em>certainly</em> no biology prerequisites: everything will be completely elementary, like learning a card game.  Pen and paper might be helpful, though.</p>
<p>As we all learn in kindergarten, DNA is a finite string over the 4-symbol alphabet {A,C,G,T}.  We&#8217;ll find it more useful, though, to think in terms of entire <em>chunks</em> of DNA bases, which we&#8217;ll label arbitrarily with letters like X, Y, and Z.  For example, we might have X=ACT, Y=TAG, and Z=GATTACA.</p>
<p>We can also <em>invert</em> one of these chunks, which means writing it backwards while also swapping the A&#8217;s with T&#8217;s and the G&#8217;s with C&#8217;s.  We&#8217;ll denote this operation by * (the technical name in biology is &#8220;reverse-complement&#8221;).  For example:</p>
<p>X*=AGT, Y*=CTA, Z*=TGTAATC.</p>
<p>Note that (X*)*=X.</p>
<p>We can then combine our chunks and their inverses into a longer DNA string, like so:</p>
<p>ZYX*Y* = GATTACA TAG AGT CTA.</p>
<p>From now on, we&#8217;ll work exclusively with the chunks, and forget completely about the underlying A&#8217;s, C&#8217;s, G&#8217;s, and T&#8217;s.</p>
<p>Now, there are also certain special chunks of DNA bases, called <em>recognition sites</em>, which tell the little machines that read the DNA when they should start doing something and when they should stop.  Recognition sites come in pairs, so we&#8217;ll label them using various parenthesis symbols like ( ), [ ], { }.  To convert a parenthesis into its partner, you invert it: thus ( = )*, [ = ]*, { = }*, etc.  Crucially, the parentheses in a DNA string don&#8217;t need to &#8220;face the right ways&#8221; relative to each other, and they also don&#8217;t need to nest properly.  Thus, both of the following are valid DNA strings:</p>
<p>X ( Y [ Z [ U ) V</p>
<p>X { Y ] Z { U [ V</p>
<p>Let&#8217;s refer to X, Y, Z, etc.&#8212;the chunks that aren&#8217;t recognition sites&#8212;as <em>letter-chunks</em>.  Then it will be convenient to make the following simplifying assumptions:</p>
<ol>
<li>Our DNA string consists of an alternating sequence of recognition sites and letter-chunks, beginning and ending with letter-chunks.  (If this weren&#8217;t true, then we could just glom together adjacent recognition sites and adjacent letter-chunks, and/or add new dummy chunks, until it <em>was</em> true.)</li>
<li>Every letter-chunk that appears in the DNA string appears exactly once (either inverted or not), while every recognition site that appears, appears exactly twice.  Thus, if there are n distinct recognition sites, there are 2n+1 distinct letter-chunks.</li>
<li>Our DNA string can be decomposed into its constituent chunks <em>uniquely</em>&#8212;i.e., it&#8217;s always possible to tell which chunk we&#8217;re dealing with, and when one chunk stops and the next one starts.  In particular, the chunks and their reverse-complements are all distinct strings.</li>
</ol>
<p>The little machines that read the DNA string are called <em>recombinases</em>.  There&#8217;s one kind of recombinase for each kind of recognition site: a (-recombinase, a [-recombinase, and so on.  When, let&#8217;s say, we let a (-recombinase loose on our DNA string, it searches for (&#8216;s and )&#8217;s and ignores everything else.  Here&#8217;s what it does:</p>
<ul>
<li>If there are no (&#8216;s or )&#8217;s in the string, or only one of them, it does nothing.</li>
<li>If there are two (&#8216;s facing the same way&#8212;like ( ( or ) )&#8212;it deletes everything in between them, including the (&#8216;s themselves.</li>
<li>If there are two (&#8216;s facing opposite ways&#8212;like ( ) or ) (&#8212;it deletes the (&#8216;s, and inverts everything in between them.</li>
</ul>
<p>Let&#8217;s see some examples.  When we apply [-recombinase to the string</p>
<p>A ( B [ C [ D ) E,</p>
<p>we get</p>
<p>A ( B D ) E.</p>
<p>When we apply (-recombinase to the same string, we get</p>
<p>A D* ] C* ] B* E.</p>
<p>When we apply <em>both</em> recombinases (in either order), we get</p>
<p>A D* B* E.</p>
<p>Another example: when we apply {-recombinase to</p>
<p>A { B ] C { D [ E,</p>
<p>we get</p>
<p>A D [ E.</p>
<p>When we apply [-recombinase to the same string, we get</p>
<p>A { B D* } C* E.</p>
<p>When we apply both recombinases&#8212;ah, but here the order matters!  If we apply { first and then [, we get</p>
<p>A D [ E,</p>
<p>since the [-recombinase now encounters only a single [, and has nothing to do.  On the other hand, if we apply [ first and then {, we get</p>
<p>A D B* C* E.</p>
<p>Notice that inverting a substring can change the relative orientation of two recognition sites&#8212;e.g., it can change { { into { } or vice versa.  It can thereby change what happens (inversion or deletion) when some future recombinase is applied.</p>
<p>One final rule: after we&#8217;re done applying recombinases, we remove the remaining recognition sites like so much scaffolding, leaving only the letter-chunks.  Thus, the final output</p>
<p>A D [ E</p>
<p>becomes simply A D E, and so on.  Notice also that, if we happen to delete one recognition site of a given type while leaving its partner, the remaining site will <em>necessarily</em> just bounce around inertly before getting deleted at the end&#8212;so we might as well &#8220;put it out of its misery,&#8221; and delete it right away.</p>
<p>My coauthors have actually implemented all of this in a wet lab, which is what most of the <em>Science</em> paper is about (my part is mostly in a technical appendix).  They think of what they&#8217;re doing as building a &#8220;biological state machine,&#8221; which could have applications (for example) to programming cells for medical purposes.</p>
<p>But without further ado, let me tell you the math question they gave me.  For reasons that they can explain better than I can, my coauthors were interested in the <em>information storage capacity</em> of their biological state machine.  That is, they wanted to know the answer to the following:</p>
<p style="padding-left: 30px;">Suppose we have a fixed initial DNA string, with n pairs of recognition sites and 2n+1 letter-chunks; and we also have a recombinase for each type of recognition site.  Then by choosing which recombinases to apply, as well as which order to apply them in, how many different DNA strings can we generate as output?</p>
<p>It&#8217;s easy to construct an example where the answer is as large as 2<sup>n</sup>.  Thus, if we consider a starting string like</p>
<p>A ( B ) C [ D ] E { F } G &lt; H &gt; I,</p>
<p>we can clearly make 2<sup>4</sup>=16 different output strings by choosing which subset of recombinases to apply and which not.  For example, applying [, {, and &lt; (in any order) yields</p>
<p>A B C D* E F* G H* I.</p>
<p>There are also cases where the number of distinct outputs is less than 2<sup>n</sup>.  For example,</p>
<p>A ( B [ C [ D ( E</p>
<p>can produce only 3 outputs&#8212;A B C D E, A B D E, and A E&#8212;rather than 4.</p>
<p>What Tim and Nate wanted to know was: can the number of distinct outputs ever be <em>greater</em> than 2<sup>n</sup>?</p>
<p>Intuitively, it seems like the answer &#8220;has to be&#8221; yes.  After all, we already saw that the order in which recombinases are applied can matter enormously.  And given n recombinases, the number of possible permutations of them is n!, not 2<sup>n</sup>.  (Furthermore, if we remember that any <em>subset</em> of the recombinases can be applied in any order, the number of possibilities is even a bit greater&#8212;about e·n!.)</p>
<p>Despite this, when my coauthors played around with examples, they found that the number of distinct output strings never exceeded 2<sup>n</sup>. In other words, the number of output strings behaved <i>as if</i> the order didn&#8217;t matter, even though it does.  The problem they gave me was either to explain this pattern or to find a counterexample.</p>
<p>I found that the pattern holds:</p>
<p><strong>Theorem:</strong> Given an initial DNA string with n pairs of recognition sites, we can generate at most 2<sup>n</sup> distinct output strings by choosing which recombinases to apply and in which order.</p>
<p>Let a <em>recombinase sequence</em> be an ordered list of recombinases, each occurring at most once: for example, ([{ means to apply (-recombinase, then [-recombinase, then {-recombinase.</p>
<p>The proof of the theorem hinges on one main definition.  Given a recombinase sequence that acts on a given DNA string, let&#8217;s call the sequence <em>irreducible</em> if every recombinase in the sequence actually finds two recognition sites (and hence, inverts or deletes a nonempty substring) when it&#8217;s applied.  Let&#8217;s call the sequence <em>reducible</em> otherwise.  For example, given</p>
<p>A { B ] C { D [ E,</p>
<p>the sequence [{ is irreducible, but {[ is reducible, since the [-recombinase does nothing.</p>
<p>Clearly, for every reducible sequence, there&#8217;s a shorter sequence that produces the same output string: just omit the recombinases that don&#8217;t do anything!  (On the other hand, I leave it as an exercise to show that the converse is false.  That is, even if a sequence is <em>ir</em>reducible, there might be a shorter sequence that produces the same output string.)</p>
<p><strong>Key Lemma:</strong> Given an initial DNA string, and given a subset of k recombinases, every irreducible sequence composed of all k of those recombinases produces the same output string.</p>
<p>Assuming the Key Lemma, let&#8217;s see why the theorem follows.  Given an initial DNA string, suppose you want to specify one of its possible output strings.  I claim you can do this using only n bits of information.  For you just need to specify which subset of the n recombinases you want to apply, in <em>some</em> irreducible order.  Since every irreducible sequence of those recombinases leads to the same output, you don&#8217;t need to specify an order on the subset.  Furthermore, for each possible output string S, there must be <em>some</em> irreducible sequence that leads to S&#8212;given a reducible sequence for S, just keep deleting irrelevant recombinases until no more are left&#8212;and therefore some subset of recombinases you could pick that uniquely determines S.  OK, but if you can specify each S uniquely using n bits, then there are at most 2<sup>n</sup> possible S&#8217;s.</p>
<p><strong>Proof of Key Lemma.</strong>  Given an initial DNA string, let&#8217;s assume for simplicity that we&#8217;re going to apply all n of the recombinases, in some irreducible order.  We claim that the final output string doesn&#8217;t depend at all on <em>which</em> irreducible order we pick.</p>
<p>If we can prove this claim, then the lemma follows, since given a proper subset of the recombinases, say of size k&lt;n, we can simply glom together everything between one relevant recognition site and the next one, treating them as 2k+1 giant letter-chunks, and then repeat the argument.</p>
<p>Now to prove the claim.  Given two letter-chunks&#8212;say A and B&#8212;let&#8217;s call them <em>soulmates</em> if either A and B or A* and B* will necessarily end up next to each other, whenever all n recombinases are applied in some irreducible order, and whenever A or B appears at all in the output string.  Also, let&#8217;s call them <em>anti-soulmates</em> if either A and B* or A* and B will necessarily end up next to each other if either appears at all.</p>
<p>To illustrate, given the initial DNA sequence,</p>
<p>A [ B ( C ] D ( E,</p>
<p>you can check that A and C are anti-soulmates.  Why?  Because if we apply all the recombinases in an irreducible sequence, then at some point, the [-recombinase needs to get applied, and it needs to find both [ recognition sites.  And one of these recognition sites will still be next to A, and the other will still be next to C (for what could have pried them apart?  nothing).  And when that happens, no matter where C has traveled in the interim, C* must get brought next to A.  If the [-recombinase does an inversion, the transformation will look like</p>
<p>A [ &#8230; C ] → A C* &#8230;,</p>
<p>while if it does a deletion, the transformation will look like</p>
<p>A [ &#8230; [ C* → A C*</p>
<p>Note that C&#8217;s [ recognition site will be to its left, if and only if C has been flipped to C*.  In this particular example, A never moves, but if it did, we could repeat the analysis for A and <em>its</em> [ recognition site.  The conclusion would be the same: no matter what inversions or deletions we do first, we&#8217;ll maintain the invariant that A and C* (or A* and C) will immediately jump next to each other, as soon as the [ recombinase is applied.  And once they&#8217;re next to each other, nothing will ever separate them.</p>
<p>Similarly, you can check that C and D are soulmates, connected by the ( recognition sites; D and B are anti-soulmates, connected by the [ sites; and B and E are soulmates, connected by the ( sites.</p>
<p>More generally, let&#8217;s consider an arbitrary DNA sequence, with n pairs of recognition sites.  Then we can define a graph, called the <em>soulmate graph</em>, where the 2n+1 letter-chunks are the vertices, and where X and Y are connected by (say) a blue edge if they&#8217;re soulmates, and by a red edge if they&#8217;re anti-soulmates.</p>
<p>When we construct this graph, we find that every vertex has exactly 2 neighbors, one for each recognition site that borders it&#8212;save the first and last vertices, which border only one recognition site each and so have only one neighbor each.  But these facts immediately determine the structure of the graph.  Namely, it must consist of a simple <em>path</em>, starting at the first letter-chunk and ending at the last one, together with possibly a disjoint union of cycles.</p>
<p>But we know that the first and last letter-chunks can never move anywhere.  For that reason, a path of soulmates and anti-soulmates, starting at the first letter-chunk and ending at the last one, <em>uniquely determines</em> the final output string, when the n recombinases are applied in any irreducible order.  We just follow it along, switching between inverted and non-inverted letter-chunks whenever we encounter a red edge.  The cycles contain the letter-chunks that necessarily get deleted along the way to that unique output string.  This completes the proof of the lemma, and hence the theorem.</p>
<p>&nbsp;</p>
<p>There are other results in the paper, like a generalization to the case where there can be k pairs of recognition sites of each type, rather than only one. In that case, we can prove that the number of distinct output strings is at most 2<sup>kn</sup>, and that it <i>can</i> be as large as ~(2k/3e)<sup>n</sup>. We don&#8217;t know the truth between those two bounds.</p>
<p>Why is this interesting?  As I said, my coauthors had their own reasons to care, involving the number of bits one can store using a certain kind of DNA state machine.  I got interested for a different reason: because this is a case where biology threw up a bunch of rules that <em>look</em> like a random mess&#8212;the parentheses don&#8217;t even need to nest correctly?  inversion can <em>also</em> change the semantics of the recognition sites?  evolution never thought about what happens if you delete one recognition site while leaving the other one?&#8212;and yet, on analysis, all the rules work in perfect harmony to produce a certain outcome.  Change a single one of them, and the &#8220;at most 2<sup>n</sup> distinct DNA sequences&#8221; theorem would be false.  Mind you, I&#8217;m still not sure what biological <em>purpose</em> it serves for the rules to work in harmony this way, but they do.</p>
<p>But the point goes further.  While working on this problem, I&#8217;d repeatedly encounter an aspect of the mathematical model that seemed weird and inexplicable&#8212;only to have Tim and Nate explain that the aspect made sense once you brought in additional facts from biology, facts not in the model they gave me.  As an example, we saw that in the soulmate graph, the deleted substrings appear as cycles.  But surely excised DNA fragments don&#8217;t literally form loops?  Why yes, apparently, they do.  As a second example, consider the DNA string</p>
<p>A ( B [ C ( D [ E.</p>
<p>When we construct the soulmate graph for this string, we get the path</p>
<p>A&#8211;D&#8211;C&#8211;B&#8211;E.</p>
<p>Yet there&#8217;s no actual recombinase sequence that leads to A D C B E as an output string!  Thus, we see that it&#8217;s possible to have a &#8220;phantom output,&#8221; which the soulmate graph suggests should be reachable but that <em>isn&#8217;t</em> actually reachable.  According to my coauthors, that&#8217;s because the &#8220;phantom outputs&#8221; <em>are</em> reachable, once you know that in real biology (as opposed to the mathematical model), excised DNA fragments can also reintegrate back into the long DNA string.</p>
<p>Many of my favorite open problems about this model concern algorithms and complexity. For example: given as input an initial DNA string, does there <i>exist</i> an irreducible order in which the recombinases can be applied? Is the &#8220;utopian string&#8221;&#8212;the string suggested by the soulmate graph&#8212;actually reachable? If it <i>is</i> reachable, then what&#8217;s the shortest sequence of recombinases that reaches it? Are these problems solvable in polynomial time? Are they NP-hard? More broadly, if we consider all the subsets of recombinases that can be applied in an irreducible order, or all the irreducible orders themselves, what combinatorial conditions do they satisfy?  I don&#8217;t know&#8212;if you&#8217;d like to take a stab, feel free to share what you find in the comments!</p>
<p>What I do know is this: I&#8217;m fortunate that, before they publish your first biology paper, the editors at <em>Science</em> don&#8217;t call up your 7<sup>th</sup>-grade Life Science teacher to ask how you did in the owl pellet unit.</p>
<hr />
<p><strong>More in the comments:</strong></p>
<ul>
<li>Some notes on the <a href="http://www.scottaaronson.com/blog/?p=2862#comment-1203242">generalization</a> to k pairs of recognition sites of each type</li>
<li>My coauthor Nathaniel Roquet&#8217;s <a href="http://www.scottaaronson.com/blog/?p=2862#comment-1203346">comments</a> on the biology</li>
</ul>
<hr />
<p><b><span style="color: red;">Unrelated Announcement from My Friend Julia Wise (July 24):</span></b> Do you like science and care about humanity’s positive trajectory? July 25 is the final day to apply for <a href="http://eaglobal.org">Effective Altruism Global 2016</a>. From August 5-7 at UC Berkeley, a network of founders, academics, policy-makers, and more will gather to apply economic and scientific thinking to the world’s most important problems. Last year featured Elon Musk and the head of Google.org. This year will be headlined by Cass Sunstein, the co-author of Nudge. If you apply with this link, the organizers will give you a free copy of <a href="http://eaglobal.org/application-form?group=dgb">Doing Good Better</a> by Will MacAskill. Scholarships are available for those who can’t afford the cost.  <a href="http://eaglobal.org">Read more here</a>.  <a href="http://eaglobal.org/application-form?group=dgb">Apply here</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2862</wfw:commentRss>
		<slash:comments>61</slash:comments>
		</item>
		<item>
		<title>The Complexity of Quantum States and Transformations: From Quantum Money to Black Holes</title>
		<link>http://www.scottaaronson.com/blog/?p=2852</link>
		<comments>http://www.scottaaronson.com/blog/?p=2852#comments</comments>
		<pubDate>Sun, 17 Jul 2016 19:46:49 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Complexity]]></category>
		<category><![CDATA[CS/Physics Deathmatch]]></category>
		<category><![CDATA[Quantum]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2852</guid>
		<description><![CDATA[On February 21-25, I taught a weeklong mini-course at the Bellairs Research Institute in Barbados, where I tried to tell an integrated story about everything from quantum proof and advice complexity classes to quantum money to AdS/CFT and the firewall problem&#8212;all through the unifying lens of quantum circuit complexity.  After a long effort&#8212;on the part [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>On February 21-25, I taught a weeklong mini-course at the Bellairs Research Institute in Barbados, where I tried to tell an integrated story about everything from quantum proof and advice complexity classes to quantum money to AdS/CFT and the firewall problem&#8212;all through the unifying lens of quantum circuit complexity.  After a long effort&#8212;on the part of me, the scribes, the guest lecturers, and the organizers&#8212;<a href="http://www.scottaaronson.com/barbados-2016.pdf">the 111-page lecture notes are finally available, right here</a>.</p>
<p>Here&#8217;s the summary:</p>
<div style="padding-left: 30px;" data-canvas-width="472.56403016666656">This mini-course will introduce participants to an exciting frontier for quantum computing theory: namely, questions involving the computational complexity of preparing a certain quantum state or applying a certain unitary transformation. Traditionally, such questions were considered in the context of the Nonabelian Hidden Subgroup Problem and quantum interactive proof systems, but they are much broader than that. One important application is the problem of “public-key quantum money” – that is, quantum states that can be authenticated by anyone, but only created or copied by a central bank – as well as related problems such as copy-protected quantum software. A second, very recent application involves the black-hole information paradox, where physicists realized that for certain conceptual puzzles in quantum gravity, they needed to know whether certain states and operations had exponential quantum circuit complexity. These two applications (quantum money and quantum gravity) even turn out to have connections to each other! A recurring theme of the course will be the quest to relate these novel problems to more traditional computational problems, so that one can say, for example, “this quantum money is hard to counterfeit if that cryptosystem is secure,” or “this state is hard to prepare if PSPACE is not in PP/poly.” Numerous open problems and research directions will be suggested, many requiring only minimal quantum background. Some previous exposure to quantum computing and information will be assumed, but a brief review will be provided.</div>
<p>If you still haven&#8217;t decided whether to tackle this thing: it&#8217;s basically a quantum complexity theory textbook (well, a textbook for certain <em>themes</em> within quantum complexity theory) that I&#8217;ve written and put on the Internet for free.  It has explanations of lots of published results both old and new, but also some results of mine (e.g., about private-key quantum money, firewalls, and AdS/CFT) that I shamefully haven&#8217;t yet written up as papers, and that therefore aren&#8217;t currently available anywhere else.  If you&#8217;re interested in certain specific topics&#8212;for example, only quantum money, or only firewalls&#8212;you should be able to skip around in the notes without too much difficulty.</p>
<p>Thanks <em>so much</em> to Denis Therien for organizing the mini-course, Anil Ada for managing the scribe notes effort, my PhD students Adam Bouland and Luke Schaeffer for their special guest lecture (the last one), and finally, the course attendees for their constant questions and interruptions, and (of course) for scribing.</p>
<p>And in case you were wondering: yes, I&#8217;ll do absolutely <em>anything</em> for science, even if it means teaching a weeklong course in Barbados!  Lest you consider this a pure island boondoggle, please know that I spent probably 12-14 hours per day either lecturing (in two 3-hour installments) or preparing for the lectures, with little sleep and just occasional dips in the ocean.</p>
<p>And now I&#8217;m headed to the Perimeter Institute for their <a href="https://www.perimeterinstitute.ca/conferences/it-qubit-summer-school">It from Qubit summer school</a>, not at all unrelated to my Barbados lectures.  This time, though, it&#8217;s thankfully other people&#8217;s turns to lecture&#8230;</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2852</wfw:commentRss>
		<slash:comments>16</slash:comments>
		</item>
		<item>
		<title>ITCS&#8217;2017: Special Guest Post by Christos Papadimitriou</title>
		<link>http://www.scottaaronson.com/blog/?p=2849</link>
		<comments>http://www.scottaaronson.com/blog/?p=2849#comments</comments>
		<pubDate>Wed, 06 Jul 2016 16:17:03 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Complexity]]></category>
		<category><![CDATA[Nerd Interest]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2849</guid>
		<description><![CDATA[The wait is over. Yes, that&#8217;s correct: the Call for Papers for the 2017 Innovations in Theoretical Computer Science (ITCS) conference, to be held in Berkeley this coming January 9-11, is finally up.  I attended ITCS&#8217;2015 in Rehovot, Israel and had a blast, and will attend ITCS&#8217;2017 if logistics permit. But that&#8217;s not all: in a [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The wait is over.</p>
<p>Yes, that&#8217;s correct: the <a href="http://people.eecs.berkeley.edu/~alexch/itcs2017-cfp.html">Call for Papers</a> for the 2017 Innovations in Theoretical Computer Science (ITCS) conference, to be held in Berkeley this coming January 9-11, is finally up.  I attended ITCS&#8217;2015 in Rehovot, Israel and had a blast, and will attend ITCS&#8217;2017 if logistics permit.</p>
<p>But that&#8217;s not all: in a <em>Shtetl-Optimized</em> exclusive, the legendary <a href="https://people.eecs.berkeley.edu/~christos/">Christos Papadimitriou</a>, coauthor of the acclaimed <a href="https://www.amazon.com/Logicomix-search-truth-Apostolos-Doxiadis/dp/1596914521">Logicomix</a> and ITCS&#8217;2017 program chair, has written us a guest post about what makes ITCS special and why you should come.  Enjoy!  &#8211;SA</p>
<hr />
<p><strong>ITCS:  A hidden treasure of TCS</strong></p>
<p>by Christos Papadimitriou</p>
<p>Conferences, for me, are a bit like demonstrations: they were fun in the 1970s.  There was the Hershey STOC, of course, and that great FOCS in Providence, plus a memorable database theory gathering in Calabria.  Ah, children, you should have been there…</p>
<p>So, even though I was a loyal supporter of the ITCS idea from the beginning – the “I”, you recall, stands for <em>innovation</em> –, I managed to miss essentially all of them – except for those that left me no excuse.  For example, this year the program committee was unreasonably kind to my submissions, and so this January I was in Boston to attend.</p>
<p>I want to tell you about <a href="http://theory.csail.mit.edu/ITCS2016/program.html">ITCS 2016</a>, because it was a gas.</p>
<p>First, I saw all the talks.  I cannot recall this ever happening to me before.  I reconnected with fields of old, learned a ton, and got a few cool new ideas.</p>
<p>In fact, I believe that there was no talk with fewer than 60 people in the audience – and that’s about 70% of the attendees.  In most talks it was closer to 90%.  When was the last conference where you saw that?</p>
<p>And what is the secret of this enhanced audience attention?  One explanation is that smaller conference means small auditorium.  Listening to the talk no longer feels like watching a concert in a stadium, or an event on TV, it’s more like a story related by a friend.  Another gimmick that works well is that, at ITCS, session chairs start the session with a 10-minute “rant,” providing context and their own view of the papers in the session.</p>
<p>Our field got a fresh breath of cohesion at ITCS 2016: cryptographers listened to game theorists in the presence of folks who do data structures for a living, or circuit complexity – for a moment there, the seventies were back.</p>
<p>Ah, those papers, their cleverness and diversity and freshness!  Here is a sample of a few with a brief comment for each (take a look at the conference website for the papers and the presentations).</p>
<ul>
<li>What is keeping quantum computers from conquering all of NP? It is the problem with destructive measurements, right?  Think again, say Aaronson, Bouland and Fitzsimons.  In their paper (<a href="http://arxiv.org/abs/1412.6507">pdf</a>, <a href="http://theory.csail.mit.edu/ITCS2016/slides/bouland.pdf">slides</a>) they consider several deviations from current restrictions, including non-destructive measurements, and the space ‘just above’ BQP turns out to be a fascinating and complex place.</li>
</ul>
<ul>
<li>Roei Tell (<a href="http://eccc.hpi-web.de/report/2015/072/">pdf</a>, <a href="http://theory.csail.mit.edu/ITCS2016/slides/roei-tell.pdf">slides</a>) asks another unexpected question: when is an object far from being far from having a property? On the way to an answer he discovers a rich and productive duality theory of property testing, as well as a very precise and sophisticated framework in which to explore it.</li>
</ul>
<ul>
<li>If you want to represent the permanent of a matrix as the determinant of another matrix of linear forms in the entries, how large must this second matrix be? – an old question by Les Valiant. The innovation by Landsberg and Ressayre (<a href="http://arxiv.org/pdf/1508.05788v2.pdf">pdf</a>, <a href="http://theory.csail.mit.edu/ITCS2016/slides/landsberg-slides.pdf">slides</a>) is that they make fantastic progress in this important problem through geometric complexity: If certain natural symmetries are to be satisfied, the answer is exponential!</li>
</ul>
<p>(A parenthesis:  The last two papers make the following important point clear: <em>Innovation</em> in ITCS is <em>not</em> meant to be the antithesis of mathematical sophistication.  Deep math and methodological innovation are key ingredients of the ITCS culture.)</p>
<ul>
<li>When shall we find an explicit function requiring more than 3<em>n</em> gates? In their brave exploration of new territory for circuit complexity, Golovnev and Kulikov (<a href="http://eccc.hpi-web.de/report/2015/170/">pdf</a>, <a href="http://theory.csail.mit.edu/ITCS2016/slides/golovnev.pdf">slides</a>) find one possible answer: “as soon as we have explicit dispersers for quadratic varieties.”</li>
</ul>
<ul>
<li>The student paper award went to Aviad Rubinstein for his work (<a href="http://arxiv.org/abs/1511.04741">pdf</a>) on auctioning multiple items – the hardest nut in algorithmic mechanism design. He gives a PTAS for optimizing over a large – and widely used – class of “partitioning” heuristics.</li>
</ul>
<p>Even though there were no lively discussions at the lobby during the sessions – too many folks attending, see? – the interaction was intense and enjoyable during the extra long breaks and the social events.</p>
<p>Plus we had the Graduating Bits night, when the youngest among us get 5 minutes to tell.  I would have traveled to Cambridge just for that!</p>
<p>All said, ITCS 2016 was a gem of a meeting.  If you skipped it, you really missed a good one.</p>
<p>But there is no reason to miss <strong>ITCS 2017</strong>, let me tell you a few things about it:</p>
<ul>
<li>It will be in <strong>Berkeley</strong>, <strong>January 9 -11 2017,</strong> the week before the Barcelona SODA.</li>
</ul>
<ul>
<li>It will take place at the Simons Institute just a few days before the boot camps on Pseudorandomness and Learning.</li>
</ul>
<ul>
<li>I volunteered to be <strong>program chair</strong>, and the steering committee has decided to try a few innovations in the submission process:</li>
</ul>
<ul>
<li><strong>Submission deadline is mid-September</strong>, so you have a few more weeks to collect your most innovative thoughts. Notification before the STOC deadline.</li>
</ul>
<ul>
<li>Authors will post a copy of their paper, and <strong>will submit to the committee a statement about it, </strong>say 1000 words max. Think of it as your chance to write a favorable referee report for your own paper!  Telling the committee why you think it is interesting and innovative.  If you feel this is self-evident, just tell us that.</li>
</ul>
<ul>
<li>The committee members will be the judges of the overall worth and innovative nature of the paper. Sub-reviewers are optional, and their opinion is not communicated to the rest of the committee.</li>
</ul>
<ul>
<li>The committee may invite speakers to present specific recent interesting work. Submitted papers especially liked by the committee may be elevated to “invited.”</li>
</ul>
<ul>
<li>Plus Graduating Bits, chair rants, social program, not to mention the Simons Institute auditorium and Berkeley in January.</li>
</ul>
<p>You should come!</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2849</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>&#8220;Did Einstein Kill Schrödinger&#8217;s Cat?  A Quantum State of Mind&#8221;</title>
		<link>http://www.scottaaronson.com/blog/?p=2847</link>
		<comments>http://www.scottaaronson.com/blog/?p=2847#comments</comments>
		<pubDate>Sat, 02 Jul 2016 22:30:15 +0000</pubDate>
		<dc:creator><![CDATA[Scott]]></dc:creator>
				<category><![CDATA[Adventures in Meatspace]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Complexity]]></category>
		<category><![CDATA[Quantum]]></category>

		<guid isPermaLink="false">http://www.scottaaronson.com/blog/?p=2847</guid>
		<description><![CDATA[No, I didn&#8217;t invent that title.  And no, I don&#8217;t know of any interesting sense in which &#8220;Einstein killed Schrödinger&#8217;s cat,&#8221; though arguably there are senses in which Schrödinger&#8217;s cat killed Einstein. The above was, however, the title given to a fun panel discussion that Daniel Harlow, Brian Swingle, and I participated in on Wednesday evening, at [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>No, I didn&#8217;t invent that title.  And no, I don&#8217;t know of any interesting sense in which &#8220;Einstein killed Schrödinger&#8217;s cat,&#8221; though arguably there are senses in which Schrödinger&#8217;s cat killed Einstein.</p>
<p>The above was, however, the title given to a fun <a href="http://livestream.com/newyorkacademyofsciences/physics6">panel discussion</a> that Daniel Harlow, Brian Swingle, and I participated in on Wednesday evening, at the spectacular facility of the New York Academy of Sciences on the 40th floor of 7 World Trade Center in lower Manhattan.  The moderator was George Musser of <em>Scientific American</em>.  About 200 people showed up, some of whom we got to meet at the reception afterward.</p>
<p>(The <a href="http://livestream.com/newyorkacademyofsciences/physics6">link</a> will take you to streaming video of the event, though you&#8217;ll need to scroll to 6:30 or so for the thing to start.)</p>
<p>The subject of the panel was the surprising recent connections between quantum information and quantum gravity, something that Daniel, Brian, and I all talked about different aspects of.  I admitted at the outset that, not only was I not a real expert on the topic (as Daniel and Brian are), I wasn&#8217;t even a physicist, just a computer science humor mercenary or whatever the hell I am.  I then proceeded, ironically, to explain the Harlow-Hayden argument for the computational hardness of creating a firewall, despite Harlow sitting right next to me (he chose to focus on something else).  I was planning also to discuss Lenny Susskind&#8217;s conjecture relating the circuit complexity of quantum states to the AdS/CFT correspondence, but I ran out of time.</p>
<p>Thanks so much to my fellow participants, to George for moderating, and especially to Jennifer Costley, Crystal Ocampo, and everyone else at NYAS for organizing the event.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.scottaaronson.com/blog/?feed=rss2&#038;p=2847</wfw:commentRss>
		<slash:comments>29</slash:comments>
		</item>
	</channel>
</rss>
